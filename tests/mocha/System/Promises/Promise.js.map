{"version":3,"sources":["System/Promises/Promise.ts"],"names":[],"mappings":"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","file":"Promise.js","sourcesContent":["///<reference types=\"node\"/>\r\nimport * as assert from \"assert\";\r\nimport {\r\n\tTSDNPromise,\r\n\tPromiseBase,\r\n\tFulfilled,\r\n\tPromiseCollection\r\n} from \"../../../../dist/commonjs/System/Promises/Promise\";\r\nimport * as AU from \"../../../../dist/commonjs/System/Collections/Array/Utility\";\r\nimport Stopwatch from \"../../../../dist/commonjs/System/Diagnostics/Stopwatch\";\r\nimport {defer} from \"../../../../dist/commonjs/System/Threading/defer\";\r\nimport {LazyPromise} from \"../../../../dist/commonjs/System/Promises/LazyPromise\";\r\nimport {ObjectDisposedException} from \"../../../../dist/commonjs/System/Disposable/ObjectDisposedException\";\r\n\r\n\r\nconst REASON = \"this is not an error, but it might show up in the console\";\r\n\r\n// In browsers that support strict mode, it'll be `undefined`; otherwise, the global.\r\n// let calledAsFunctionThis = (function() { return this; }());\r\n\r\nafterEach(function()\r\n{\r\n\t//Q.onerror = null;\r\n});\r\n\r\ndescribe(\"computing sum of integers using promises\", ()=>\r\n{\r\n\t// Use triangular numbers...\r\n\tconst count = 1000;\r\n\tconst array = AU.range(1, count);\r\n\tconst swA = Stopwatch.startNew();\r\n\tconst answer = array.reduce((currentVal, nextVal) => currentVal + nextVal, 0);\r\n\tswA.stop();\r\n\r\n\tit(\"should compute correct result without blowing stack (Synchronous) (lambda only)\", ()=>\r\n\t{\r\n\t\tlet sw = Stopwatch.startNew();\r\n\t\treturn array\r\n\t\t\t.reduce((promise:PromiseBase<number>, nextVal:number) =>\r\n\t\t\t\tpromise.thenSynchronous(currentVal=>currentVal + nextVal), TSDNPromise.resolve(0))\r\n\t\t\t.thenSynchronous(value=>\r\n\t\t\t{\r\n\t\t\t\tsw.stop();\r\n\t\t\t\t// console.log(\"\");\r\n\t\t\t\t// console.log(\"Synchronous Promise Compute Milliseconds: \", sw.elapsedMilliseconds);\r\n\t\t\t\tassert.equal(value, answer);\r\n\t\t\t});\r\n\t});\r\n\r\n\tit(\"should compute correct result without blowing stack (Synchronous) (lambda only)\", ()=>\r\n\t{\r\n\t\tconst source = new PromiseCollection(array.map(v => new Fulfilled(v)));\r\n\t\tlet sw = Stopwatch.startNew();\r\n\t\treturn source\r\n\t\t\t.reduce((previousValue:number, currentValue:number) =>previousValue+currentValue,0)\r\n\t\t\t.then(value=>\r\n\t\t\t{\r\n\t\t\t\tsw.stop();\r\n\t\t\t\t// console.log(\"\");\r\n\t\t\t\t// console.log(\"PromiseCollection Compute Milliseconds: \", sw.elapsedMilliseconds);\r\n\t\t\t\tassert.equal(value, answer);\r\n\t\t\t});\r\n\t});\r\n\r\n\tit(\"should compute correct result without blowing stack (lambda only)\", ()=>\r\n\t{\r\n\t\tlet sw = Stopwatch.startNew();\r\n\t\treturn array\r\n\t\t\t.reduce((promise:PromiseBase<number>, nextVal:number) =>\r\n\t\t\t\tpromise.then(currentVal=>currentVal + nextVal), TSDNPromise.resolve(0))\r\n\t\t\t.then(value=>\r\n\t\t\t{\r\n\t\t\t\tsw.stop();\r\n\t\t\t\t//console.log(\"\");\r\n\t\t\t\t//console.log(\"Deferred Promise Compute Milliseconds: \", sw.elapsedMilliseconds);\r\n\t\t\t\tassert.equal(value, answer);\r\n\t\t\t});\r\n\t});\r\n\r\n\t// it(\"should compute correct result without blowing stack (All Deferred) (lambda only)\", ()=>\r\n\t// {\r\n\t// \tlet sw = Stopwatch.startNew();\r\n\t// \treturn array\r\n\t// \t\t.reduce((promise:PromiseBase<number>, nextVal:number) =>\r\n\t// \t\t\tpromise.then(\r\n\t// \t\t\t\tcurrentVal=>currentVal + nextVal).deferAll(), Promise.resolve(0).deferAll())\r\n\t// \t\t.then(value=>\r\n\t// \t\t{\r\n\t// \t\t\tsw.stop();\r\n\t// \t\t\t//console.log(\"\");\r\n\t// \t\t\t//console.log(\"All Deferred Promise Compute Milliseconds: \", sw.elapsedMilliseconds);\r\n\t// \t\t\tassert.equal(value, answer);\r\n\t// \t\t});\r\n\t// });\r\n\r\n\tit(\"should be deferring fulfillment\", ()=>\r\n\t{\r\n\r\n\t\tlet wasRun = false;\r\n\t\tconst r = TSDNPromise.resolve(true).then(() =>\r\n\t\t{\r\n\t\t\twasRun = true;\r\n\t\t});\r\n\t\tassert.ok(!wasRun, \"The promise should have deferred until after closure completed.\");\r\n\t\treturn r;\r\n\t});\r\n\r\n});\r\n\r\n\r\ndescribe(\"Resolution and Rejection\", ()=>\r\n{\r\n\tit(\"should result in a fulfilled promise when given a value\", ()=>\r\n\t{\r\n\t\tconst f = TSDNPromise.resolve(5);\r\n\t\tassert.equal(f.result, 5);\r\n\t\tassert.equal(f.isSettled, true);\r\n\t\tassert.equal(f.isFulfilled, true);\r\n\t\tassert.equal(f.isRejected, false);\r\n\t});\r\n\r\n\tit(\"should result in a rejected promise when requesting rejected\", ()=>\r\n\t{\r\n\t\tconst f = TSDNPromise.reject(\"err\");\r\n\t\tassert.equal(f.error, \"err\");\r\n\t\tassert.equal(f.isSettled, true);\r\n\t\tassert.equal(f.isFulfilled, false);\r\n\t\tassert.equal(f.isRejected, true);\r\n\t});\r\n\r\n\tit(\"resolves multiple observers\", done=>\r\n\t{\r\n\t\tlet nextTurn = false;\r\n\r\n\t\tconst resolution = \"Ta-ram pam param!\";\r\n\t\tconst pending = new TSDNPromise<any>();\r\n\t\tconst count = 10;\r\n\t\tlet i = 0;\r\n\r\n\t\tfunction resolve(value:any)\r\n\t\t{\r\n\t\t\ti++;\r\n\t\t\tassert.equal(value, resolution);\r\n\t\t\tassert.ok(nextTurn);\r\n\t\t\tif(!nextTurn) i = count;\r\n\t\t\tif(i===count)\r\n\t\t\t{\r\n\t\t\t\tdone();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile(++i<=count)\r\n\t\t{\r\n\t\t\tpending.then(resolve);\r\n\t\t}\r\n\r\n\t\tpending.resolve(resolution);\r\n\t\ti = 0;\r\n\t\tnextTurn = true;\r\n\t});\r\n\r\n\tit(\"observers called even after throw (synchronous)\", ()=>\r\n\t{\r\n\t\tlet threw = false;\r\n\t\tconst pending = new TSDNPromise();\r\n\t\tpending.thenSynchronous(()=>\r\n\t\t{\r\n\t\t\tthrew = true;\r\n\t\t\tthrow new Error(REASON);\r\n\t\t});\r\n\r\n\t\tpending.thenSynchronous(\r\n\t\t\tvalue=>assert.equal(value, 10),\r\n\t\t\t()=>assert.equal(\"not\", \"here\")\r\n\t\t);\r\n\r\n\t\tpending.resolve(10);\r\n\t\treturn pending;\r\n\t});\r\n\r\n\tit(\"observers called even after throw (asynchronous)\", ()=>\r\n\t{\r\n\t\tlet threw = false;\r\n\t\tconst pending = new TSDNPromise();\r\n\t\tpending.thenSynchronous(()=>\r\n\t\t{\r\n\t\t\tthrew = true;\r\n\t\t\tthrow new Error(REASON);\r\n\t\t});\r\n\r\n\t\tpending.thenSynchronous(\r\n\t\t\tvalue=>assert.equal(value, 10),\r\n\t\t\t()=>assert.equal(\"not\", \"here\")\r\n\t\t);\r\n\r\n\t\tpending.resolve(10);\r\n\t\treturn pending;\r\n\t});\r\n\r\n\tconst BREAK = \"break\", NO = \"NO!\";\r\n\r\n\tfunction testPromiseFlow(p:PromiseBase<boolean>):PromiseBase<void>\r\n\t{\r\n\t\treturn p\r\n\t\t\t.then(<any>null) // ensure pass through\r\n\t\t\t.then(v=> // onFulfilled\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v); // v === true\r\n\t\t\t\treturn v; // *\r\n\t\t\t}, ()=> // onRejected\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn true;\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\treturn v; // *\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\treturn false; // *\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(!v);\r\n\t\t\t\treturn true; // *\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\tthrow BREAK; // *\r\n\t\t\t}, ()=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn NO;\r\n\t\t\t})\r\n\t\t\t.then(<any>null, <any>null) // ensure pass through\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\t// The previous promise threw/rejected so should never go here.\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn NO;\r\n\t\t\t}, e=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(e, BREAK);\r\n\t\t\t\treturn BREAK; // *\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(v, BREAK);\r\n\t\t\t\treturn true; // *\r\n\t\t\t}, ()=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false);\r\n\t\t\t\treturn false;\r\n\t\t\t})\r\n\t\t\t.then<boolean>(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\tthrow BREAK; // *\r\n\t\t\t})\r\n\t\t\t.catch(e=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(e, BREAK);\r\n\t\t\t\treturn true; // *\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(v);\r\n\t\t\t\treturn 10;\r\n\t\t\t})\r\n\t\t\t.then(v=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(v, 10);\r\n\t\t\t\tthrow \"force catch\"\r\n\t\t\t})\r\n\t\t\t.catch(()=>{\r\n\t\t\t\tthrow BREAK; // Make sure throws inside reject are captured.\r\n\t\t\t})\r\n\t\t\t.catch(e=>\r\n\t\t\t{\r\n\t\t\t\tassert.equal(e, BREAK);\r\n\t\t\t})\r\n\t}\r\n\r\n\tit(\"should follow expected promise behavior flow for a resolved promise\", ()=>\r\n\t{\r\n\t\treturn testPromiseFlow(TSDNPromise.resolve(true));\r\n\t});\r\n\r\n\r\n\tit(\"should follow expected promise behavior flow for a rejected promise\", ()=>\r\n\t{\r\n\t\treturn testPromiseFlow(\r\n\t\t\tTSDNPromise\r\n\t\t\t\t.reject(BREAK)\r\n\t\t\t\t.then(v=>\r\n\t\t\t\t{\r\n\t\t\t\t\tassert.ok(false,\"Fulfilled when it should have been rejected.\");\r\n\t\t\t\t},v=>\r\n\t\t\t\t{\r\n\t\t\t\t\tassert.equal(v, BREAK);\r\n\t\t\t\t})\r\n\t\t\t\t.finally(()=>true)\r\n\t\t);\r\n\t});\r\n\r\n\tit(\"should pass through\",()=>{\r\n\t\treturn TSDNPromise.resolve(true)\r\n\t\t\t.thenAllowFatal<void>(()=>{\r\n\t\t\t\t// throw \"BAM!\";\r\n\t\t\t});\r\n\t});\r\n\r\n\tit(\"should follow expected promise behavior flow for a pending then resolved promise\", ()=>\r\n\t{\r\n\t\tconst p = new TSDNPromise<boolean>();\r\n\t\tassert.ok(p.isPending);\r\n\t\tp.resolve(true);\r\n\t\treturn testPromiseFlow(p);\r\n\t});\r\n\r\n\r\n\tit(\"should be able to use a then-able\", ()=>\r\n\t{\r\n\t\tconst p:any = TSDNPromise.createFrom((r:TSDNPromise.Fulfill<boolean,boolean>) =>\r\n\t\t{\r\n\t\t\tr(true);\r\n\t\t\treturn TSDNPromise.resolve(true);\r\n\t\t});\r\n\t\treturn testPromiseFlow(p);\r\n\t});\r\n\r\n\r\n\tit(\"should be able to use a lazy\", ()=>\r\n\t{\r\n\t\tit(\".deferFromNow\", ()=>\r\n\t\t{\r\n\t\t\tnew LazyPromise<boolean>(()=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false, \"Should not have triggered the resolution.\");\r\n\t\t\t}).delayFromNow(1000);\r\n\r\n\t\t\tconst elapsed = Stopwatch.startNew();\r\n\r\n\t\t\treturn testPromiseFlow(\r\n\t\t\t\tnew LazyPromise<boolean>(resolve=>defer(()=>resolve(true), 1000))\r\n\t\t\t\t\t.delayFromNow(1000)\r\n\t\t\t\t\t.thenThis(()=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst ms = elapsed.elapsedMilliseconds;\r\n\t\t\t\t\t\tassert.ok(ms>1000 && ms<2000);\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\tit(\".deferFromNow\", ()=>\r\n\t\t{\r\n\t\t\tnew LazyPromise<boolean>(()=>\r\n\t\t\t{\r\n\t\t\t\tassert.ok(false, \"Should not have triggered the resolution.\");\r\n\t\t\t}).delayAfterResolve(1000);\r\n\r\n\t\t\tconst elapsed = Stopwatch.startNew();\r\n\r\n\t\t\treturn testPromiseFlow(\r\n\t\t\t\tnew LazyPromise<boolean>(resolve=>defer(()=>resolve(true), 1000))\r\n\t\t\t\t\t.delayAfterResolve(1000)\r\n\t\t\t\t\t.thenThis(()=>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst ms = elapsed.elapsedMilliseconds;\r\n\t\t\t\t\t\tassert.ok(ms>2000 && ms<3000);\r\n\t\t\t\t\t})\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t});\r\n\r\n\tit(\"should be able to use promise as a resolution\", ()=>\r\n\t{\r\n\t\tconst s = new TSDNPromise<boolean>();\r\n\t\tconst p = new TSDNPromise<boolean>(resolve =>\r\n\t\t{\r\n\t\t\tdefer(() => resolve(s));\r\n\t\t});\r\n\t\tassert.ok(s.isPending);\r\n\t\tassert.ok(p.isPending);\r\n\t\ts.resolve(true);\r\n\t\treturn testPromiseFlow(p);\r\n\t});\r\n\r\n\tit(\"should be able to wait for all\", ()=>\r\n\t{\r\n\t\tconst other = new LazyPromise<number>(resolve =>\r\n\t\t{\r\n\t\t\tresolve(4);\r\n\t\t});\r\n\t\treturn TSDNPromise.waitAll<any>(\r\n\t\t\tother,\r\n\t\t\tTSDNPromise.resolve(3),\r\n\t\t\tTSDNPromise.resolve(2),\r\n\t\t\tTSDNPromise.reject(BREAK),\r\n\t\t\tTSDNPromise.resolve(1)\r\n\t\t).thenSynchronous((r:any[])=>\r\n\t\t{\r\n\t\t\tassert.equal(r[0].result, 4);\r\n\t\t\tassert.equal(r[1].result, 3);\r\n\t\t\tassert.equal(r[2].result, 2);\r\n\t\t\tassert.equal(r[3].result, void 0);\r\n\t\t\tassert.equal(r[3].error, BREAK);\r\n\t\t\tassert.equal(r[4].result, 1);\r\n\t\t}, ()=>assert.ok(false));\r\n\t});\r\n\r\n\tit(\"should be able to resolve all\", ()=>\r\n\t{\r\n\t\tconst other = new LazyPromise<number>(resolve =>\r\n\t\t{\r\n\t\t\tresolve(4);\r\n\t\t});\r\n\t\treturn TSDNPromise.all(\r\n\t\t\tother.delayFromNow(10).delayAfterResolve(10),\r\n\t\t\tTSDNPromise.resolve(3),\r\n\t\t\tTSDNPromise.resolve(2),\r\n\t\t\tTSDNPromise.resolve(1)\r\n\t\t).thenSynchronous(r=>\r\n\t\t{\r\n\t\t\tassert.equal(r[0], 4);\r\n\t\t\tassert.equal(r[1], 3);\r\n\t\t\tassert.equal(r[2], 2);\r\n\t\t\tassert.equal(r[3], 1);\r\n\t\t});\r\n\t});\r\n\r\n\tit(\"should resolve as rejected\", ()=>\r\n\t{\r\n\t\tconst other = new LazyPromise<number>(resolve =>\r\n\t\t{\r\n\t\t\tresolve(4);\r\n\t\t});\r\n\t\treturn TSDNPromise.all(\r\n\t\t\tother,\r\n\t\t\tTSDNPromise.resolve(3),\r\n\t\t\tTSDNPromise.resolve(2),\r\n\t\t\tTSDNPromise.resolve(1),\r\n\t\t\tTSDNPromise.reject(-1)\r\n\t\t).thenSynchronous(()=>\r\n\t\t{\r\n\t\t\tassert.ok(false);\r\n\t\t}, e=>\r\n\t\t{\r\n\t\t\tassert.equal(e, -1);\r\n\t\t});\r\n\t});\r\n\r\n\tit(\"should be resolve the first to win the race\", ()=>\r\n\t{\r\n\t\tconst other = new LazyPromise<number>((resolve, reject) =>\r\n\t\t{\r\n\t\t\treject(4);\r\n\t\t});\r\n\t\treturn TSDNPromise.race(\r\n\t\t\tother.delayAfterResolve(40),\r\n\t\t\tTSDNPromise.resolve(3).delayFromNow(10),\r\n\t\t\tTSDNPromise.resolve(2).delayFromNow(20),\r\n\t\t\tTSDNPromise.resolve(1).delayFromNow(30)\r\n\t\t).thenSynchronous(r=>\r\n\t\t{\r\n\t\t\tassert.equal(r, 3);\r\n\t\t}, ()=>\r\n\t\t{\r\n\t\t\tassert.ok(false);\r\n\t\t});\r\n\t});\r\n\r\n\tit(\"should be resolve the rejection\", ()=>\r\n\t{\r\n\t\treturn TSDNPromise.race(\r\n\t\t\tTSDNPromise.resolve(3).delayFromNow(20),\r\n\t\t\tTSDNPromise.resolve(2).delayAfterResolve(10),\r\n\t\t\tTSDNPromise.reject(1)\r\n\t\t).thenSynchronous(()=>\r\n\t\t{\r\n\t\t\tassert.ok(false);\r\n\t\t}, e=>\r\n\t\t{\r\n\t\t\tassert.equal(e, 1);\r\n\t\t});\r\n\t});\r\n\r\n\tit(\"should resolve the chain fulfilled promise result.\", ()=>\r\n\t\tnew TSDNPromise((resolve=>resolve(new TSDNPromise((resolve=>resolve(TSDNPromise.resolve(1)))))))\r\n\t\t\t.thenSynchronous(\r\n\t\t\t\tv=>assert.equal(v, 1),\r\n\t\t\t\t()=>assert.ok(false))\r\n\t);\r\n\r\n\tit(\"should resolve the rejected promise result.\", ()=>\r\n\t\tnew TSDNPromise((resolve=>resolve(TSDNPromise.reject(BREAK))))\r\n\t\t\t.thenSynchronous(\r\n\t\t\t\t()=>assert.ok(false),\r\n\t\t\t\te=>assert.equal(e, BREAK))\r\n\t);\r\n\r\n\tit(\"should rejected a disposed promise-result..\", ()=>\r\n\t\tnew TSDNPromise((resolve=>\r\n\t\t{\r\n\t\t\tconst r = TSDNPromise.resolve(1);\r\n\t\t\tr.dispose();\r\n\t\t\tresolve(r)\r\n\t\t}))\r\n\t\t\t.thenSynchronous(\r\n\t\t\t\t()=>assert.ok(false),\r\n\t\t\t\te=>assert.ok(e instanceof ObjectDisposedException))\r\n\t);\r\n\r\n});\r\n"]}