{"version":3,"sources":["System.Linq/Linq.ts"],"names":[],"mappings":"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","file":"Linq.js","sourcesContent":["/*!\r\n * @author electricessence / https://github.com/electricessence/\r\n * Original: http://linqjs.codeplex.com/\r\n * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md\r\n */\r\n\r\nimport {areEqual as areEqualValues, compare as compareValues} from \"../System/Compare\";\r\nimport {copy} from \"../System/Collections/Array/copy\";\r\nimport * as Arrays from \"../System/Collections/Array/Compare\";\r\nimport * as enumUtil from \"../System/Collections/Enumeration/Enumerator\";\r\nimport {\r\n\tisEnumerable,\r\n\tisEnumerator,\r\n\tisIterator,\r\n\tthrowIfEndless\r\n} from \"../System/Collections/Enumeration/Enumerator\";\r\nimport {EmptyEnumerator} from \"../System/Collections/Enumeration/EmptyEnumerator\";\r\nimport {Type} from \"../System/Types\";\r\nimport {Integer} from \"../System/Integer\";\r\nimport {Functions as BaseFunctions} from \"../System/Functions\";\r\nimport {ArrayEnumerator} from \"../System/Collections/Enumeration/ArrayEnumerator\";\r\nimport {EnumeratorBase} from \"../System/Collections/Enumeration/EnumeratorBase\";\r\nimport {Dictionary} from \"../System/Collections/Dictionaries/Dictionary\";\r\nimport {Queue} from \"../System/Collections/Queue\";\r\nimport {dispose, using} from \"../System/Disposable/dispose\";\r\nimport {DisposableBase} from \"../System/Disposable/DisposableBase\";\r\nimport {UnsupportedEnumerableException} from \"../System/Collections/Enumeration/UnsupportedEnumerableException\";\r\nimport {ObjectDisposedException} from \"../System/Disposable/ObjectDisposedException\";\r\nimport {KeySortedContext} from \"../System/Collections/Sorting/KeySortedContext\";\r\nimport {ArgumentNullException} from \"../System/Exceptions/ArgumentNullException\";\r\nimport {ArgumentOutOfRangeException} from \"../System/Exceptions/ArgumentOutOfRangeException\";\r\nimport {IEnumerator} from \"../System/Collections/Enumeration/IEnumerator\";\r\nimport {IEnumerable} from \"../System/Collections/Enumeration/IEnumerable\";\r\nimport {\r\n\tAction,\r\n\tActionWithIndex,\r\n\tClosure,\r\n\tComparison,\r\n\tEqualityComparison,\r\n\tPredicate,\r\n\tPredicateWithIndex,\r\n\tSelector,\r\n\tSelectorWithIndex\r\n} from \"../System/FunctionTypes\";\r\nimport {IDictionary, IMap} from \"../System/Collections/Dictionaries/IDictionary\";\r\nimport {Comparable} from \"../System/IComparable\";\r\nimport {IComparer} from \"../System/IComparer\";\r\nimport {IKeyValuePair} from \"../System/KeyValuePair\";\r\nimport {Order} from \"../System/Collections/Sorting/Order\";\r\nimport {\r\n\tIFiniteEnumerable,\r\n\tIGrouping,\r\n\tIInfiniteEnumerable,\r\n\tILinqEnumerable,\r\n\tILookup,\r\n\tIOrderedEnumerable,\r\n\tNotEmptyEnumerable\r\n} from \"./Enumerable\";\r\nimport {EnumerableAction} from \"./EnumerableAction\";\r\nimport {IndexEnumerator} from \"../System/Collections/Enumeration/IndexEnumerator\";\r\nimport {Primitive} from \"../System/Primitive\";\r\nimport {IteratorEnumerator} from \"../System/Collections/Enumeration/IteratorEnumerator\";\r\nimport {ForEachEnumerable} from \"../System/Collections/Enumeration/ForEachEnumerable\";\r\nimport {initialize} from \"../System/Collections/Array/initialize\";\r\nimport {Random} from \"../System/Random\";\r\nimport {\r\n\tInfiniteEnumerator,\r\n\tInfiniteValueFactory\r\n} from \"../System/Collections/Enumeration/InfiniteEnumerator\";\r\nimport __extendsImport from \"../extends\";\r\nimport {LazyList} from \"../System/Collections/LazyList\";\r\nimport disposeSingle = dispose.single;\r\n// noinspection JSUnusedLocalSymbols\r\nconst __extends = __extendsImport;\r\n\r\n\r\n// #region Local Constants.\r\n\r\nconst INVALID_DEFAULT:any = {}; // create a private unique instance for referencing.\r\nconst VOID0:undefined = void 0;\r\nconst NULL:any = null;\r\nfunction BREAK():EnumerableAction\r\n{\r\n\treturn EnumerableAction.Break;\r\n}\r\nfunction RETURN():EnumerableAction\r\n{\r\n\treturn EnumerableAction.Return;\r\n}\r\nfunction isNotNullOrUndefined(e:any):boolean\r\n{\r\n\treturn e!=null;\r\n}\r\n\r\n\r\n// Leave internal to avoid accidental overwriting.\r\nclass LinqFunctions\r\n\textends BaseFunctions\r\n{\r\n\t// noinspection JSMethodCanBeStatic\r\n\tGreater<T>(a:T, b:T)\r\n\t{\r\n\t\treturn a>b ? a : b;\r\n\t}\r\n\r\n\r\n\t// noinspection JSMethodCanBeStatic\r\n\tLesser<T>(a:T, b:T)\r\n\t{\r\n\t\treturn a<b ? a : b;\r\n\t}\r\n}\r\n\r\nconst Functions = Object.freeze(new LinqFunctions());\r\n\r\n// For re-use as a factory.\r\nfunction getEmptyEnumerator():IEnumerator<any>\r\n{\r\n\treturn EmptyEnumerator;\r\n}\r\n\r\n// #endregion\r\n\r\n\r\n/*\r\n * NOTE: About InfiniteEnumerable<T> and Enumerable<T>.\r\n * There may seem like there's extra overrides here and they may seem unnecessary.\r\n * But after closer inspection you'll see the type chain is retained and\r\n * infinite enumerables are prevented from having features that finite ones have.\r\n *\r\n * I'm not sure if it's the best option to just use overrides, but it honors the typing properly.\r\n */\r\n\r\nexport class InfiniteLinqEnumerable<T>\r\n\textends DisposableBase\r\n\timplements IInfiniteEnumerable<T>\r\n{\r\n\tconstructor(\r\n\t\tprotected _enumeratorFactory:() => IEnumerator<T>,\r\n\t\tfinalizer?:Closure | null)\r\n\t{\r\n\t\tsuper(finalizer);\r\n\t\tthis._isEndless = true;\r\n\t\tthis._disposableObjectName = \"InfiniteLinqEnumerable\";\r\n\t}\r\n\r\n\tprotected _isEndless:boolean | undefined;\r\n\tget isEndless():boolean | undefined\r\n\t{\r\n\t\treturn this._isEndless;\r\n\t}\r\n\r\n\t// #region IEnumerable<T> Implementation...\r\n\tgetEnumerator():IEnumerator<T>\r\n\t{\r\n\r\n\t\tthis.throwIfDisposed();\r\n\r\n\t\treturn this._enumeratorFactory();\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\t// #region IDisposable override...\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose(); // Just in case.\r\n\t\t(<any>this)._enumeratorFactory = null;\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\t// Return a default (unfiltered) enumerable.\r\n\tasEnumerable():this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\treturn <any> new InfiniteLinqEnumerable<T>(() => _.getEnumerator());\r\n\t}\r\n\r\n\t/**\r\n\t * Similar to forEach, but executes an action for each time a value is enumerated.\r\n\t * If the action explicitly returns false or 0 (EnumerationAction.Break), the enumeration will complete.\r\n\t * If it returns a 2 (EnumerationAction.Skip) it will move on to the next item.\r\n\t * This also automatically handles disposing the enumerator.\r\n\t * @param action\r\n\t * @param initializer\r\n\t * @param isEndless Special case where isEndless can be null in order to negate inheritance.\r\n\t * @param onComplete Executes just before the enumerator releases when there is no more entries.\r\n\t * @returns {any}\r\n\t */\r\n\r\n\tdoAction(\r\n\t\taction:ActionWithIndex<T> | PredicateWithIndex<T> | SelectorWithIndex<T, number> | SelectorWithIndex<T, EnumerableAction>,\r\n\t\tinitializer:Closure | null,\r\n\t\tisEndless:true,\r\n\t\tonComplete?:Action<number>):InfiniteLinqEnumerable<T>\r\n\r\n\tdoAction(\r\n\t\taction:ActionWithIndex<T> | PredicateWithIndex<T> | SelectorWithIndex<T, number> | SelectorWithIndex<T, EnumerableAction>,\r\n\t\tinitializer?:Closure | null,\r\n\t\tisEndless?:boolean | null | undefined,\r\n\t\tonComplete?:Action<number>):LinqEnumerable<T>\r\n\r\n\tdoAction(\r\n\t\taction:ActionWithIndex<T> | PredicateWithIndex<T> | SelectorWithIndex<T, number> | SelectorWithIndex<T, EnumerableAction>,\r\n\t\tinitializer?:Closure | null,\r\n\t\tisEndless:boolean | null | undefined = this.isEndless,\r\n\t\tonComplete?:Action<number>):LinqEnumerable<T>\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tconst isE:boolean | undefined = isEndless || undefined; // In case it's null.\r\n\t\tif(!action)\r\n\t\t\tthrow new ArgumentNullException(\"action\");\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet index:number = 0;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!action);\r\n\r\n\t\t\t\t\t\tif(initializer) initializer();\r\n\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t\t// May need a way to propagate isEndless\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!action);\r\n\r\n\t\t\t\t\t\twhile(enumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet c = enumerator.current!;\r\n\t\t\t\t\t\t\tlet actionResult = <any>action(c, index++);\r\n\r\n\t\t\t\t\t\t\tif(actionResult===false || actionResult===EnumerableAction.Break)\r\n\t\t\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\r\n\t\t\t\t\t\t\tif(actionResult!==EnumerableAction.Skip) // || !== 2\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(c);\r\n\r\n\t\t\t\t\t\t\t// If actionResult===2, then a signal for skip is received.\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(onComplete) onComplete(index);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisE\r\n\t\t\t\t);\r\n\r\n\t\t\t},\r\n\t\t\t// Using a finalizer value reduces the chance of a circular reference\r\n\t\t\t// since we could simply reference the enumeration and check e.wasDisposed.\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\taction = NULL;\r\n\t\t\t},\r\n\r\n\t\t\tisE\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tforce():void\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\tthis.doAction(BREAK)\r\n\t\t\t.getEnumerator()\r\n\t\t\t.moveNext();\r\n\r\n\t}\r\n\r\n\t// #region Indexing/Paging methods.\r\n\tskip(count:number):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(!isFinite(count)) // +Infinity equals skip all so return empty.\r\n\t\t\treturn <any> new InfiniteLinqEnumerable<T>(getEmptyEnumerator);\r\n\r\n\t\tInteger.assert(count, \"count\");\r\n\r\n\t\treturn this.where((element, index) => index>=count);\r\n\t}\r\n\r\n\r\n\ttake(count:number):FiniteEnumerable<T>\r\n\t{\r\n\t\tif(!(count>0)) // Out of bounds? Empty.\r\n\t\t\treturn Enumerable.empty<T>();\r\n\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(!isFinite(count))\r\n\t\t\tthrow new ArgumentOutOfRangeException('count', count, 'Must be finite.');\r\n\r\n\t\tInteger.assert(count, \"count\");\r\n\r\n\t\t// Once action returns false, the enumeration will stop.\r\n\t\treturn <any> _.doAction((element, index) => index<count, null, false);\r\n\t}\r\n\r\n\t// #region Single Value Return...\r\n\r\n\telementAt(index:number):T\r\n\t{\r\n\t\tconst v = this.elementAtOrDefault(index, INVALID_DEFAULT);\r\n\t\tif(v===INVALID_DEFAULT) throw new ArgumentOutOfRangeException('index', index, \"is greater than or equal to the number of elements in source\");\r\n\t\treturn <T>v;\r\n\t}\r\n\r\n\telementAtOrDefault(index:number):T | undefined\r\n\telementAtOrDefault(index:number, defaultValue:T):T\r\n\telementAtOrDefault(index:number, defaultValue?:T):T | undefined\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tInteger.assertZeroOrGreater(index, 'index');\r\n\t\tconst n:number = index;\r\n\r\n\t\treturn using(\r\n\t\t\tthis.getEnumerator(),\r\n\t\t\te =>\r\n\t\t\t{\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\twhile(e.moveNext())\r\n\t\t\t\t{\r\n\t\t\t\t\tif(i==n) return e.current;\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn defaultValue;\r\n\t\t\t});\r\n\t}\r\n\r\n\t/* Note: Unlike previous implementations, you could pass a predicate into these methods.\r\n\t * But since under the hood it ends up calling .where(predicate) anyway,\r\n\t * it may be better to remove this to allow for a cleaner signature/override.\r\n\t * JavaScript/TypeScript does not easily allow for a strict method interface like C#.\r\n\t * Having to write extra override logic is error prone and confusing to the consumer.\r\n\t * Removing the predicate here may also cause the consumer of this method to think more about how they structure their query.\r\n\t * The end all difference is that the user must declare .where(predicate) before .first(), .single(), or .last().\r\n\t * Otherwise there would need to be much more code to handle these cases (.first(predicate), etc);\r\n\t * */\r\n\r\n\tfirst():T\r\n\t{\r\n\t\tconst v = this.firstOrDefault(INVALID_DEFAULT);\r\n\t\tif(v===INVALID_DEFAULT) throw new Error(\"first:The sequence is empty.\");\r\n\t\treturn <T>v;\r\n\t}\r\n\r\n\tfirstOrDefault():T | undefined\r\n\tfirstOrDefault(defaultValue:T):T\r\n\tfirstOrDefault(defaultValue?:T):T | undefined\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\treturn using(\r\n\t\t\tthis.getEnumerator(),\r\n\t\t\te => e.moveNext() ? e.current : defaultValue\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tsingle():T\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\treturn <T>using(\r\n\t\t\tthis.getEnumerator(),\r\n\t\t\te =>\r\n\t\t\t{\r\n\t\t\t\tif(e.moveNext())\r\n\t\t\t\t{\r\n\t\t\t\t\tlet value = e.current;\r\n\t\t\t\t\tif(!e.moveNext()) return value;\r\n\t\t\t\t\tthrow new Error(\"single:sequence contains more than one element.\");\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error(\"single:The sequence is empty.\");\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tsingleOrDefault():T | undefined\r\n\tsingleOrDefault(defaultValue:T):T\r\n\tsingleOrDefault(defaultValue?:T):T | undefined\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\treturn using(\r\n\t\t\tthis.getEnumerator(),\r\n\t\t\te =>\r\n\t\t\t{\r\n\t\t\t\tif(e.moveNext())\r\n\t\t\t\t{\r\n\t\t\t\t\tlet value = e.current;\r\n\t\t\t\t\tif(!e.moveNext()) return value;\r\n\t\t\t\t}\r\n\t\t\t\treturn defaultValue;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tany():boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\treturn using(\r\n\t\t\tthis.getEnumerator(),\r\n\t\t\te => e.moveNext()\r\n\t\t);\r\n\t}\r\n\r\n\tisEmpty():boolean\r\n\t{\r\n\t\treturn !this.any();\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\r\n\t// #region Projection and Filtering Methods\r\n\r\n\r\n\ttraverseDepthFirst(\r\n\t\tchildrenSelector:(element:T) => ForEachEnumerable<T> | null | undefined):LinqEnumerable<T>;\r\n\r\n\ttraverseDepthFirst<TNode>(\r\n\t\tchildrenSelector:(element:T | TNode) => ForEachEnumerable<TNode> | null | undefined):LinqEnumerable<TNode>;\r\n\r\n\ttraverseDepthFirst<TResult>(\r\n\t\tchildrenSelector:(element:T) => ForEachEnumerable<T> | null | undefined,\r\n\t\tresultSelector:SelectorWithIndex<T, TResult>):LinqEnumerable<TResult>;\r\n\r\n\ttraverseDepthFirst<TNode, TResult>(\r\n\t\tchildrenSelector:(element:T | TNode) => ForEachEnumerable<TNode> | null | undefined,\r\n\t\tresultSelector:SelectorWithIndex<T, TResult>):LinqEnumerable<TResult>;\r\n\r\n\ttraverseDepthFirst<TNode>(\r\n\t\tchildrenSelector:(element:T | TNode) => ForEachEnumerable<TNode> | null | undefined,\r\n\t\tresultSelector:(\r\n\t\t\telement:TNode,\r\n\t\t\tnestLevel:number) => any = Functions.Identity):LinqEnumerable<any>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet disposed = !_.throwIfDisposed();\r\n\r\n\t\tconst isEndless = _._isEndless; // Is endless is not affirmative if false.\r\n\r\n\t\treturn new LinqEnumerable<any>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\t// Dev Note: May want to consider using an actual stack and not an array.\r\n\t\t\t\tlet enumeratorStack:IEnumerator<any>[];\r\n\t\t\t\tlet enumerator:IEnumerator<any>;\r\n\t\t\t\tlet len:number;  // Avoid using push/pop since they query .length every time and can be slower.\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t\tenumeratorStack = [];\r\n\t\t\t\t\t\tlen = 0;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\twhile(true)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(enumerator.moveNext())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlet value = resultSelector(<TNode>enumerator.current, len);\r\n\t\t\t\t\t\t\t\tenumeratorStack[len++] = enumerator;\r\n\t\t\t\t\t\t\t\tlet c = childrenSelector(<T | TNode>enumerator.current);\r\n\t\t\t\t\t\t\t\tlet e = !Type.isString(c) && Enumerable.fromAny(c);\r\n\t\t\t\t\t\t\t\tenumerator = e ? e.getEnumerator() : EmptyEnumerator;\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(value);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(len==0) return false;\r\n\r\n\t\t\t\t\t\t\tenumerator.dispose();\r\n\t\t\t\t\t\t\tenumerator = enumeratorStack[--len];\r\n\t\t\t\t\t\t\tenumeratorStack.length = len;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfinally\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(enumeratorStack)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdispose.these.noCopy(enumeratorStack);\r\n\t\t\t\t\t\t\t\tenumeratorStack.length = 0;\r\n\t\t\t\t\t\t\t\tenumeratorStack = NULL;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tdisposed = true;\r\n\t\t\t},\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tflatten<TFlat>():InfiniteLinqEnumerable<TFlat>\r\n\tflatten():InfiniteLinqEnumerable<any>\r\n\tflatten():InfiniteLinqEnumerable<any>\r\n\t{\r\n\t\treturn this.selectMany(entry =>\r\n\t\t{\r\n\t\t\tlet e = !Type.isString(entry) && Enumerable.fromAny(entry);\r\n\t\t\treturn e ? e.flatten() : [entry];\r\n\t\t});\r\n\t}\r\n\r\n\r\n\tpairwise<TSelect>(\r\n\t\tselector:(\r\n\t\t\tprevious:T, current:T,\r\n\t\t\tindex:number) => TSelect):InfiniteLinqEnumerable<TSelect>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(!selector)\r\n\t\t\tthrow new ArgumentNullException(\"selector\");\r\n\r\n\t\tlet previous:T;\r\n\t\treturn this.select<TSelect>((value, i) =>\r\n\t\t{\r\n\t\t\tconst result:any = i ? selector(previous!, value, i) : NULL;\r\n\t\t\tprevious = value;\r\n\t\t\treturn result;\r\n\t\t}).skip(1);\r\n\t}\r\n\r\n\tscan(func:(previous:T, current:T, index:number) => T, seed?:T):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(!func)\r\n\t\t\tthrow new ArgumentNullException(\"func\");\r\n\r\n\t\treturn <this>(\r\n\t\t\tseed===VOID0\r\n\t\t\t\t? this.select((value, i) => seed = i ? func(seed!, value, i) : value)\r\n\t\t\t\t: this.select((value, i) => seed = func(seed!, value, i))\r\n\t\t);\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\tselect<TResult>(selector:SelectorWithIndex<T, TResult>):InfiniteLinqEnumerable<TResult>\r\n\t{\r\n\t\treturn this._filterSelected(selector);\r\n\t}\r\n\r\n\tmap<TResult>(selector:SelectorWithIndex<T, TResult>):InfiniteLinqEnumerable<TResult>\r\n\t{\r\n\t\treturn this._filterSelected(selector);\r\n\t}\r\n\r\n\t/*\r\n\tpublic static IEnumerable<TResult> SelectMany<TSource, TCollection, TResult>(\r\n\t\tthis IEnumerable<TSource> source,\r\n\t\tFunc<TSource, IEnumerable<TCollection>> collectionSelector,\r\n\t\tFunc<TSource, TCollection, TResult> resultSelector)\r\n\t */\r\n\r\n\tprotected _selectMany<TElement, TResult>(\r\n\t\tcollectionSelector:SelectorWithIndex<T, ForEachEnumerable<TElement> | null | undefined>,\r\n\t\tresultSelector?:(collection:T, element:TElement) => TResult):LinqEnumerable<TResult>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(!collectionSelector)\r\n\t\t\tthrow new ArgumentNullException(\"collectionSelector\");\r\n\r\n\t\tconst isEndless = _._isEndless; // Do second enumeration, it will be indeterminate if false.\r\n\t\tif(!resultSelector)\r\n\t\t\tresultSelector = (a:T, b:any) => <TResult>b;\r\n\r\n\t\treturn new LinqEnumerable<TResult>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet middleEnumerator:IEnumerator<any> | null | undefined;\r\n\t\t\t\tlet index:number = 0;\r\n\r\n\t\t\t\treturn new EnumeratorBase<TResult>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!collectionSelector);\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t\tmiddleEnumerator = VOID0;\r\n\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!collectionSelector);\r\n\t\t\t\t\t\t// Just started, and nothing to enumerate? End.\r\n\t\t\t\t\t\tif(middleEnumerator===VOID0 && !enumerator.moveNext())\r\n\t\t\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t\t\t// moveNext has been called at least once...\r\n\t\t\t\t\t\tdo\r\n\t\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t\t// Initialize middle if there isn't one.\r\n\t\t\t\t\t\t\tif(!middleEnumerator)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlet middleSeq = collectionSelector(<T>enumerator.current, index++);\r\n\r\n\t\t\t\t\t\t\t\t// Collection is null?  Skip it...\r\n\t\t\t\t\t\t\t\tif(!middleSeq)\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\t\tmiddleEnumerator = enumUtil.from(middleSeq);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(middleEnumerator.moveNext())\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(\r\n\t\t\t\t\t\t\t\t\tresultSelector!(\r\n\t\t\t\t\t\t\t\t\t\t<T>enumerator.current, <TElement>middleEnumerator.current\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// else no more in this middle?  Then clear and reset for next...\r\n\r\n\t\t\t\t\t\t\tmiddleEnumerator.dispose();\r\n\t\t\t\t\t\t\tmiddleEnumerator = null;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile(enumerator.moveNext());\r\n\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tdisposeSingle(middleEnumerator);\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\tmiddleEnumerator = null;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tcollectionSelector = NULL;\r\n\t\t\t},\r\n\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tselectMany<TResult>(\r\n\t\tcollectionSelector:SelectorWithIndex<T, ForEachEnumerable<TResult> | null | undefined>):InfiniteLinqEnumerable<TResult>;\r\n\r\n\tselectMany<TElement, TResult>(\r\n\t\tcollectionSelector:SelectorWithIndex<T, ForEachEnumerable<TElement> | null | undefined>,\r\n\t\tresultSelector:(collection:T, element:TElement) => TResult):InfiniteLinqEnumerable<TResult>;\r\n\r\n\tselectMany<TResult>(\r\n\t\tcollectionSelector:SelectorWithIndex<T, ForEachEnumerable<any> | null | undefined>,\r\n\t\tresultSelector?:(collection:T, element:any) => TResult):InfiniteLinqEnumerable<TResult>\r\n\t{\r\n\t\treturn this._selectMany(collectionSelector, resultSelector);\r\n\t}\r\n\r\n\tprotected _filterSelected(\r\n\t\tselector?:SelectorWithIndex<T, T>,\r\n\t\tfilter?:PredicateWithIndex<T>):LinqEnumerable<T>\r\n\tprotected _filterSelected<TResult>(\r\n\t\tselector:SelectorWithIndex<T, TResult>,\r\n\t\tfilter?:PredicateWithIndex<TResult>):LinqEnumerable<TResult>\r\n\tprotected _filterSelected(\r\n\t\tselector:SelectorWithIndex<T, any> = Functions.Identity,\r\n\t\tfilter?:PredicateWithIndex<any>):LinqEnumerable<any>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet disposed = !_.throwIfDisposed();\r\n\t\tif(!selector)\r\n\t\t\tthrow new ArgumentNullException(\"selector\");\r\n\r\n\t\treturn new LinqEnumerable<any>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet index:number = 0;\r\n\r\n\r\n\t\t\t\treturn new EnumeratorBase<any>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!selector);\r\n\r\n\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\r\n\t\t\t\t\t\twhile(enumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet i = index++;\r\n\t\t\t\t\t\t\tlet result = selector(enumerator.current!, i);\r\n\t\t\t\t\t\t\tif(!filter || filter(result, i++))\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(result);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t_._isEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tdisposed = false;\r\n\t\t\t},\r\n\r\n\t\t\t_._isEndless\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns selected values that are not null or undefined.\r\n\t */\r\n\tchoose():InfiniteLinqEnumerable<T>;\r\n\tchoose<TResult>(selector?:Selector<T, TResult>):InfiniteLinqEnumerable<TResult>\r\n\tchoose(selector:Selector<T, any> = Functions.Identity):InfiniteLinqEnumerable<any>\r\n\t{\r\n\t\treturn this._filterSelected(selector, isNotNullOrUndefined);\r\n\t}\r\n\r\n\twhere(predicate:PredicateWithIndex<T>):this\r\n\t{\r\n\t\treturn <any>this._filterSelected(Functions.Identity, predicate);\r\n\t}\r\n\r\n\tfilter(predicate:PredicateWithIndex<T>):this\r\n\t{\r\n\t\treturn <any>this._filterSelected(Functions.Identity, predicate);\r\n\t}\r\n\r\n\tnonNull():this\r\n\t{\r\n\t\treturn this.where(v => v!=null && v!=VOID0);\r\n\t}\r\n\r\n\tofType<TType>(type:{ new (...params:any[]):TType }):InfiniteLinqEnumerable<TType>;\r\n\tofType<TType>(type:any):InfiniteLinqEnumerable<TType>\r\n\t{\r\n\t\tlet typeName:string;\r\n\t\tswitch(<any>type)\r\n\t\t{\r\n\t\t\tcase Number:\r\n\t\t\t\ttypeName = Type.NUMBER;\r\n\t\t\t\tbreak;\r\n\t\t\tcase String:\r\n\t\t\t\ttypeName = Type.STRING;\r\n\t\t\t\tbreak;\r\n\t\t\tcase Boolean:\r\n\t\t\t\ttypeName = Type.BOOLEAN;\r\n\t\t\t\tbreak;\r\n\t\t\tcase Function:\r\n\t\t\t\ttypeName = Type.FUNCTION;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\treturn <any> this\r\n\t\t\t\t\t.where(x => x instanceof type);\r\n\t\t}\r\n\t\treturn <any>this\r\n\t\t\t.where(x => isNotNullOrUndefined(x) && typeof x===typeName);\r\n\t}\r\n\r\n\texcept(\r\n\t\tsecond:ForEachEnumerable<T>,\r\n\t\tcompareSelector?:Selector<T, string | number | symbol>):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet disposed = !_.throwIfDisposed();\r\n\t\tconst isEndless = _._isEndless;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet keys:Dictionary<T, boolean>;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t\tkeys = new Dictionary<T, boolean>(compareSelector);\r\n\t\t\t\t\t\tif(second)\r\n\t\t\t\t\t\t\tenumUtil.forEach(second, key => { keys.addByKeyValue(key, true) });\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\twhile(enumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet current = <T>enumerator.current;\r\n\t\t\t\t\t\t\tif(!keys.containsKey(current))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkeys.addByKeyValue(current, true);\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(current);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tkeys.clear();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tdisposed = true;\r\n\t\t\t},\r\n\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tdistinct(compareSelector?:Selector<T, string | number | symbol>):this\r\n\t{\r\n\t\treturn this.except(NULL, compareSelector);\r\n\t}\r\n\r\n\t// [0,0,0,1,1,1,2,2,2,0,0,0,1,1] results in [0,1,2,0,1];\r\n\tdistinctUntilChanged(compareSelector:Selector<T, any> = Functions.Identity):this\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\tlet disposed = !_.throwIfDisposed();\r\n\t\tconst isEndless = _._isEndless;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet compareKey:any;\r\n\t\t\t\tlet initial:boolean = true;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\twhile(enumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet key = compareSelector(<T>enumerator.current);\r\n\r\n\t\t\t\t\t\t\tif(initial)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tinitial = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(areEqualValues(compareKey, key))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcompareKey = key;\r\n\t\t\t\t\t\t\treturn yielder.yieldReturn(enumerator.current);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tdisposed = true;\r\n\t\t\t},\r\n\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a single default value if empty.\r\n\t * @param defaultValue\r\n\t * @returns {Enumerable}\r\n\t */\r\n\tdefaultIfEmpty(defaultValue?:T):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst disposed:boolean = !_.throwIfDisposed();\r\n\t\tconst isEndless = _._isEndless;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet isFirst:boolean;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisFirst = true;\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\r\n\t\t\t\t\t\tif(enumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisFirst = false;\r\n\t\t\t\t\t\t\treturn yielder.yieldReturn(enumerator.current);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(isFirst)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisFirst = false;\r\n\t\t\t\t\t\t\treturn yielder.yieldReturn(defaultValue);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tzip<TSecond, TResult>(\r\n\t\tsecond:ForEachEnumerable<TSecond>,\r\n\t\tresultSelector:(first:T, second:TSecond, index:number) => TResult):LinqEnumerable<TResult>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\r\n\t\treturn new LinqEnumerable<TResult>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet firstEnumerator:IEnumerator<T>;\r\n\t\t\t\tlet secondEnumerator:IEnumerator<TSecond>;\r\n\t\t\t\tlet index:number = 0;\r\n\r\n\t\t\t\treturn new EnumeratorBase<TResult>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\tfirstEnumerator = _.getEnumerator();\r\n\t\t\t\t\t\tsecondEnumerator = enumUtil.from<TSecond>(second);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) => firstEnumerator.moveNext()\r\n\t\t\t\t\t&& secondEnumerator.moveNext()\r\n\t\t\t\t\t&& yielder.yieldReturn(resultSelector(<T>firstEnumerator.current, <TSecond>secondEnumerator.current, index++)),\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(firstEnumerator) firstEnumerator.dispose();\r\n\t\t\t\t\t\tif(secondEnumerator) secondEnumerator.dispose();\r\n\t\t\t\t\t\tfirstEnumerator = NULL;\r\n\t\t\t\t\t\tsecondEnumerator = NULL;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tzipMultiple<TSecond, TResult>(\r\n\t\tsecond:ArrayLike<ForEachEnumerable<TSecond>>,\r\n\t\tresultSelector:(first:T, second:TSecond, index:number) => TResult):LinqEnumerable<TResult>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(!second.length)\r\n\t\t\treturn Enumerable.empty<TResult>();\r\n\r\n\t\treturn new LinqEnumerable<TResult>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet secondTemp:Queue<any>;\r\n\t\t\t\tlet firstEnumerator:IEnumerator<T>;\r\n\t\t\t\tlet secondEnumerator:IEnumerator<TSecond>;\r\n\t\t\t\tlet index:number = 0;\r\n\r\n\t\t\t\treturn new EnumeratorBase<TResult>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tsecondTemp = new Queue<any>(second);\r\n\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\tfirstEnumerator = _.getEnumerator();\r\n\t\t\t\t\t\tsecondEnumerator = NULL;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(firstEnumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twhile(true)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\twhile(!secondEnumerator)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tif(secondTemp.count)\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tlet next = secondTemp.dequeue();\r\n\t\t\t\t\t\t\t\t\t\tif(next) // In case by chance next is null, then try again.\r\n\t\t\t\t\t\t\t\t\t\t\tsecondEnumerator = enumUtil.from<TSecond>(next);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif(secondEnumerator.moveNext())\r\n\t\t\t\t\t\t\t\t\treturn yielder.yieldReturn(\r\n\t\t\t\t\t\t\t\t\t\tresultSelector(<T>firstEnumerator.current, <TSecond>secondEnumerator.current, index++)\r\n\t\t\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t\tsecondEnumerator.dispose();\r\n\t\t\t\t\t\t\t\tsecondEnumerator = NULL;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(firstEnumerator) firstEnumerator.dispose();\r\n\t\t\t\t\t\tif(secondEnumerator) secondEnumerator.dispose();\r\n\t\t\t\t\t\tif(secondTemp) secondTemp.dispose();\r\n\t\t\t\t\t\tfirstEnumerator = NULL;\r\n\t\t\t\t\t\tsecondEnumerator = NULL;\r\n\t\t\t\t\t\tsecondTemp = NULL;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\r\n\t// #region Join Methods\r\n\r\n\tjoin<TInner, TKey, TResult>(\r\n\t\tinner:ForEachEnumerable<TInner>,\r\n\t\touterKeySelector:Selector<T, TKey>,\r\n\t\tinnerKeySelector:Selector<TInner, TKey>,\r\n\t\tresultSelector:(outer:T, inner:TInner) => TResult,\r\n\t\tcompareSelector:Selector<TKey, string | number | symbol> = Functions.Identity):LinqEnumerable<TResult>\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\treturn new LinqEnumerable<TResult>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet outerEnumerator:IEnumerator<T>;\r\n\t\t\t\tlet lookup:ILookup<TKey, TInner>;\r\n\t\t\t\tlet innerElements:TInner[] | null;\r\n\t\t\t\tlet innerCount:number = 0;\r\n\r\n\t\t\t\treturn new EnumeratorBase<TResult>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\touterEnumerator = _.getEnumerator();\r\n\t\t\t\t\t\tlookup = Enumerable.from(inner)\r\n\t\t\t\t\t\t\t.toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhile(true)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(innerElements)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlet innerElement = innerElements[innerCount++];\r\n\t\t\t\t\t\t\t\tif(innerElement!==VOID0)\r\n\t\t\t\t\t\t\t\t\treturn yielder.yieldReturn(resultSelector(<T>outerEnumerator.current, innerElement));\r\n\r\n\t\t\t\t\t\t\t\tinnerElements = null;\r\n\t\t\t\t\t\t\t\tinnerCount = 0;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(outerEnumerator.moveNext())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlet key = outerKeySelector(<T>outerEnumerator.current);\r\n\t\t\t\t\t\t\t\tinnerElements = lookup.get(key);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(outerEnumerator) outerEnumerator.dispose();\r\n\t\t\t\t\t\tinnerElements = null;\r\n\t\t\t\t\t\touterEnumerator = NULL;\r\n\t\t\t\t\t\tlookup = NULL;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tgroupJoin<TInner, TKey, TResult>(\r\n\t\tinner:ForEachEnumerable<TInner>,\r\n\t\touterKeySelector:Selector<T, TKey>,\r\n\t\tinnerKeySelector:Selector<TInner, TKey>,\r\n\t\tresultSelector:(outer:T, inner:TInner[] | null) => TResult,\r\n\t\tcompareSelector:Selector<TKey, string | number | symbol> = Functions.Identity):LinqEnumerable<TResult>\r\n\t{\r\n\t\tconst _ = this;\r\n\r\n\t\treturn new LinqEnumerable<TResult>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet lookup:ILookup<TKey, TInner>;\r\n\r\n\t\t\t\treturn new EnumeratorBase<TResult>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t\tlookup = Enumerable.from(inner)\r\n\t\t\t\t\t\t\t.toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\tenumerator.moveNext()\r\n\t\t\t\t\t&& yielder.yieldReturn(\r\n\t\t\t\t\t\tresultSelector(\r\n\t\t\t\t\t\t\t<T>enumerator.current,\r\n\t\t\t\t\t\t\tlookup.get(outerKeySelector(<T>enumerator.current))\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t),\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\tlookup = NULL;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tmerge(enumerables:ArrayLike<ForEachEnumerable<T>>):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst isEndless = _._isEndless;\r\n\r\n\t\tif(!enumerables || enumerables.length==0)\r\n\t\t\treturn _;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet queue:Queue<ForEachEnumerable<T>>;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// 1) First get our values...\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t\tqueue = new Queue<ForEachEnumerable<T>>(enumerables);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhile(true)\r\n\t\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\t\twhile(!enumerator && queue.tryDequeue(value =>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tenumerator = enumUtil.from<T>(value); // 4) Keep going and on to step 2.  Else fall through to yieldBreak().\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t{ }\r\n\r\n\t\t\t\t\t\t\tif(enumerator && enumerator.moveNext()) // 2) Keep returning until done.\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(enumerator.current);\r\n\r\n\t\t\t\t\t\t\tif(enumerator) // 3) Dispose and reset for next.\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tenumerator.dispose();\r\n\t\t\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\tif(queue) queue.dispose();\r\n\t\t\t\t\t\tqueue = NULL;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\tconcat(...enumerables:Array<ForEachEnumerable<T>>):this\r\n\t{\r\n\t\treturn this.merge(enumerables);\r\n\t}\r\n\r\n\r\n\tunion(\r\n\t\tsecond:ForEachEnumerable<T>,\r\n\t\tcompareSelector:Selector<T, string | number | symbol> = Functions.Identity):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst isEndless = _._isEndless;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet firstEnumerator:IEnumerator<T>;\r\n\t\t\t\tlet secondEnumerator:IEnumerator<T>;\r\n\t\t\t\tlet keys:Dictionary<T, any>;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfirstEnumerator = _.getEnumerator();\r\n\t\t\t\t\t\tkeys = new Dictionary<T, any>(compareSelector); // Acting as a HashSet.\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet current:T;\r\n\t\t\t\t\t\tif(secondEnumerator===VOID0)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twhile(firstEnumerator.moveNext())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tcurrent = <T>firstEnumerator.current;\r\n\t\t\t\t\t\t\t\tif(!keys.containsKey(current))\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tkeys.addByKeyValue(current, null);\r\n\t\t\t\t\t\t\t\t\treturn yielder.yieldReturn(current);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsecondEnumerator = enumUtil.from(second);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile(secondEnumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcurrent = <T>secondEnumerator.current;\r\n\t\t\t\t\t\t\tif(!keys.containsKey(current))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkeys.addByKeyValue(current, null);\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(current);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(firstEnumerator) firstEnumerator.dispose();\r\n\t\t\t\t\t\tif(secondEnumerator) secondEnumerator.dispose();\r\n\t\t\t\t\t\tfirstEnumerator = NULL;\r\n\t\t\t\t\t\tsecondEnumerator = NULL;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\tinsertAt(index:number, other:ForEachEnumerable<T>):this\r\n\t{\r\n\t\tInteger.assertZeroOrGreater(index, 'index');\r\n\t\tconst n:number = index;\r\n\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tconst isEndless = _._isEndless;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\r\n\t\t\t\tlet firstEnumerator:IEnumerator<T>;\r\n\t\t\t\tlet secondEnumerator:IEnumerator<T>;\r\n\r\n\t\t\t\tlet count:number = 0;\r\n\t\t\t\tlet isEnumerated:boolean = false;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcount = 0;\r\n\t\t\t\t\t\tfirstEnumerator = _.getEnumerator();\r\n\t\t\t\t\t\tsecondEnumerator = enumUtil.from<T>(other);\r\n\t\t\t\t\t\tisEnumerated = false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(count==n)\r\n\t\t\t\t\t\t{ // Inserting?\r\n\t\t\t\t\t\t\tisEnumerated = true;\r\n\t\t\t\t\t\t\tif(secondEnumerator.moveNext())\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(secondEnumerator.current);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(firstEnumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t\treturn yielder.yieldReturn(firstEnumerator.current);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn !isEnumerated\r\n\t\t\t\t\t\t\t&& secondEnumerator.moveNext()\r\n\t\t\t\t\t\t\t&& yielder.yieldReturn(secondEnumerator.current);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(firstEnumerator) firstEnumerator.dispose();\r\n\t\t\t\t\t\tfirstEnumerator = NULL;\r\n\t\t\t\t\t\tif(secondEnumerator) secondEnumerator.dispose();\r\n\t\t\t\t\t\tsecondEnumerator = NULL;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\r\n\talternateMultiple(sequence:ForEachEnumerable<T>):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst isEndless = _._isEndless;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet buffer:T,\r\n\t\t\t\t    mode:EnumerableAction,\r\n\t\t\t\t    enumerator:IEnumerator<T>,\r\n\t\t\t\t    alternateEnumerator:IEnumerator<T>;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Instead of recalling getEnumerator every time, just reset the existing one.\r\n\t\t\t\t\t\talternateEnumerator = new ArrayEnumerator(\r\n\t\t\t\t\t\t\tEnumerable.toArray<T>(sequence)\r\n\t\t\t\t\t\t); // Freeze\r\n\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\r\n\t\t\t\t\t\tlet hasAtLeastOne = enumerator.moveNext();\r\n\t\t\t\t\t\tmode = hasAtLeastOne\r\n\t\t\t\t\t\t\t? EnumerableAction.Return\r\n\t\t\t\t\t\t\t: EnumerableAction.Break;\r\n\r\n\t\t\t\t\t\tif(hasAtLeastOne)\r\n\t\t\t\t\t\t\tbuffer = <T>enumerator.current;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tswitch(mode)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcase EnumerableAction.Break: // We're done?\r\n\t\t\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\r\n\t\t\t\t\t\t\tcase EnumerableAction.Skip:\r\n\t\t\t\t\t\t\t\tif(alternateEnumerator.moveNext())\r\n\t\t\t\t\t\t\t\t\treturn yielder.yieldReturn(alternateEnumerator.current);\r\n\t\t\t\t\t\t\t\talternateEnumerator.reset();\r\n\t\t\t\t\t\t\t\tmode = EnumerableAction.Return;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet latest = buffer;\r\n\r\n\t\t\t\t\t\t// Set up the next round...\r\n\r\n\t\t\t\t\t\t// Is there another one?  Set the buffer and setup instruct for the next one to be the alternate.\r\n\t\t\t\t\t\tlet another = enumerator.moveNext();\r\n\t\t\t\t\t\tmode = another\r\n\t\t\t\t\t\t\t? EnumerableAction.Skip\r\n\t\t\t\t\t\t\t: EnumerableAction.Break;\r\n\r\n\t\t\t\t\t\tif(another)\r\n\t\t\t\t\t\t\tbuffer = <T>enumerator.current;\r\n\r\n\t\t\t\t\t\treturn yielder.yieldReturn(latest);\r\n\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tif(alternateEnumerator) alternateEnumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\talternateEnumerator = NULL;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\talternateSingle(value:T):this\r\n\t{\r\n\t\treturn this.alternateMultiple(Enumerable.make(value));\r\n\t}\r\n\r\n\talternate(...sequence:T[]):this\r\n\t{\r\n\t\treturn this.alternateMultiple(sequence);\r\n\t}\r\n\r\n\r\n\t// #region Error Handling\r\n\tcatchError(handler:(e:any) => void):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst disposed = !_.throwIfDisposed();\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch(e)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Don't init...\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) try\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\t\tif(enumerator.moveNext())\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(enumerator.current);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcatch(e)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\thandler(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tfinallyAction(action:Closure):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tconst disposed = !_.throwIfDisposed();\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\treturn (enumerator.moveNext())\r\n\t\t\t\t\t\t\t? yielder.yieldReturn(enumerator.current)\r\n\t\t\t\t\t\t\t: false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttry\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfinally\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\taction();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\tbuffer(size:number):InfiniteLinqEnumerable<T[]>\r\n\t{\r\n\t\tif(size<1 || !isFinite(size))\r\n\t\t\tthrow new Error(\"Invalid buffer size.\");\r\n\r\n\t\tInteger.assert(size, \"size\");\r\n\r\n\t\tconst _ = this;\r\n\t\tconst isEndless = _._isEndless;\r\n\t\tlet len:number;\r\n\r\n\t\treturn new LinqEnumerable<T[]>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\treturn new EnumeratorBase<T[]>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet array:T[] = initialize<T>(size);\r\n\t\t\t\t\t\tlen = 0;\r\n\t\t\t\t\t\twhile(len<size && enumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tarray[len++] = <T>enumerator.current;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tarray.length = len;\r\n\t\t\t\t\t\treturn !!len && yielder.yieldReturn(array);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\tnull,\r\n\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tshare():this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tlet sharedEnumerator:IEnumerator<T>;\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\treturn sharedEnumerator || (sharedEnumerator = _.getEnumerator());\r\n\t\t\t},\r\n\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tif(sharedEnumerator) sharedEnumerator.dispose();\r\n\t\t\t\tsharedEnumerator = NULL;\r\n\t\t\t},\r\n\r\n\t\t\t_._isEndless\r\n\t\t);\r\n\t}\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n * Enumerable<T> is a wrapper class that allows more primitive enumerables to exhibit LINQ behavior.\r\n *\r\n * In C# Enumerable<T> is not an instance but has extensions for IEnumerable<T>.\r\n * In this case, we use Enumerable<T> as the underlying class that is being chained.\r\n */\r\nexport class LinqEnumerable<T>\r\n\textends InfiniteLinqEnumerable<T>\r\n\timplements ILinqEnumerable<T>\r\n{\r\n\r\n\tconstructor(\r\n\t\tenumeratorFactory:() => IEnumerator<T>,\r\n\t\tfinalizer?:Closure | null,\r\n\t\tisEndless?:boolean)\r\n\t{\r\n\t\tsuper(enumeratorFactory, finalizer);\r\n\t\tthis._isEndless = isEndless;\r\n\t\tthis._disposableObjectName = \"LinqEnumerable\";\r\n\t}\r\n\r\n\t// Return a default (unfiltered) enumerable.\r\n\tasEnumerable():this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\treturn <any> new LinqEnumerable<T>(() => _.getEnumerator());\r\n\t}\r\n\r\n// #region Indexing/Paging methods.\r\n\r\n\tskip(count:number):LinqEnumerable<T>\r\n\t{\r\n\t\treturn <any>super.skip(count);\r\n\t}\r\n\r\n\tskipWhile(predicate:PredicateWithIndex<T>):LinqEnumerable<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn this.doAction(\r\n\t\t\t(element:T, index:number) =>\r\n\t\t\t\tpredicate(element, index)\r\n\t\t\t\t\t? EnumerableAction.Skip\r\n\t\t\t\t\t: EnumerableAction.Return\r\n\t\t);\r\n\t}\r\n\r\n\ttakeWhile(predicate:PredicateWithIndex<T>):this\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\r\n\t\tif(!predicate)\r\n\t\t\tthrow new ArgumentNullException('predicate');\r\n\r\n\t\treturn <any>this.doAction(\r\n\t\t\t(element:T, index:number) =>\r\n\t\t\t\tpredicate(element, index)\r\n\t\t\t\t\t? EnumerableAction.Return\r\n\t\t\t\t\t: EnumerableAction.Break,\r\n\t\t\tnull,\r\n\t\t\tnull // We don't know the state if it is endless or not.\r\n\t\t);\r\n\t}\r\n\r\n\t// Is like the inverse of take While with the ability to return the value identified by the predicate.\r\n\ttakeUntil(predicate:PredicateWithIndex<T>, includeUntilValue?:boolean):this\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\r\n\t\tif(!predicate)\r\n\t\t\tthrow new ArgumentNullException('predicate');\r\n\r\n\t\tif(!includeUntilValue)\r\n\t\t\treturn <any>this.doAction(\r\n\t\t\t\t(element:T, index:number) =>\r\n\t\t\t\t\tpredicate(element, index)\r\n\t\t\t\t\t\t? EnumerableAction.Break\r\n\t\t\t\t\t\t: EnumerableAction.Return,\r\n\t\t\t\tnull,\r\n\t\t\t\tnull // We don't know the state if it is endless or not.\r\n\t\t\t);\r\n\r\n\t\tlet found:boolean = false;\r\n\t\treturn <any>this.doAction(\r\n\t\t\t(element:T, index:number) =>\r\n\t\t\t{\r\n\t\t\t\tif(found)\r\n\t\t\t\t\treturn EnumerableAction.Break;\r\n\r\n\t\t\t\tfound = predicate(element, index);\r\n\t\t\t\treturn EnumerableAction.Return;\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tfound = false;\r\n\t\t\t},\r\n\t\t\tnull // We don't know the state if it is endless or not.\r\n\t\t);\r\n\t}\r\n\r\n\t// Since an infinite enumerable will always end up traversing breadth first, we have this only here for regular enumerable.\r\n\ttraverseBreadthFirst(\r\n\t\tchildrenSelector:(element:T) => ForEachEnumerable<T> | null | undefined):LinqEnumerable<T>;\r\n\r\n\ttraverseBreadthFirst<TNode>(\r\n\t\tchildrenSelector:(element:T | TNode) => ForEachEnumerable<TNode> | null | undefined):LinqEnumerable<TNode>;\r\n\r\n\ttraverseBreadthFirst<TResult>(\r\n\t\tchildrenSelector:(element:T) => ForEachEnumerable<T> | null | undefined,\r\n\t\tresultSelector:SelectorWithIndex<T, TResult>):LinqEnumerable<TResult>;\r\n\r\n\ttraverseBreadthFirst<TNode, TResult>(\r\n\t\tchildrenSelector:(element:T | TNode) => ForEachEnumerable<TNode> | null | undefined,\r\n\t\tresultSelector:SelectorWithIndex<T, TResult>):LinqEnumerable<TResult>;\r\n\r\n\ttraverseBreadthFirst<TNode>(\r\n\t\tchildrenSelector:(element:T | TNode) => ForEachEnumerable<TNode> | null | undefined,\r\n\t\tresultSelector:(\r\n\t\t\telement:TNode,\r\n\t\t\tnestLevel:number) => any = Functions.Identity):LinqEnumerable<any>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet disposed = !_.throwIfDisposed();\r\n\r\n\t\tconst isEndless = _._isEndless; // Is endless is not affirmative if false.\r\n\r\n\r\n\t\treturn new LinqEnumerable<any>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<any>;\r\n\t\t\t\tlet nestLevel:number = 0;\r\n\t\t\t\tlet buffer:any[], len:number;\r\n\r\n\t\t\t\treturn new EnumeratorBase<any>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\r\n\t\t\t\t\t\tnestLevel = 0;\r\n\t\t\t\t\t\tbuffer = [];\r\n\t\t\t\t\t\tlen = 0;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\r\n\t\t\t\t\t\twhile(true)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(enumerator.moveNext())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tbuffer[len++] = enumerator.current;\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(resultSelector(enumerator.current, nestLevel));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(!len)\r\n\t\t\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\r\n\t\t\t\t\t\t\tlet next = Enumerable\r\n\t\t\t\t\t\t\t\t.from(buffer)\r\n\t\t\t\t\t\t\t\t.selectMany(childrenSelector);\r\n\r\n\t\t\t\t\t\t\tif(!next.any())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tnestLevel++;\r\n\t\t\t\t\t\t\t\tbuffer = [];\r\n\t\t\t\t\t\t\t\tlen = 0;\r\n\t\t\t\t\t\t\t\tenumerator.dispose();\r\n\t\t\t\t\t\t\t\tenumerator = next.getEnumerator();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\tbuffer.length = 0;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tdisposed = true;\r\n\t\t\t},\r\n\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tforEach(action:ActionWithIndex<T>, max?:number):number\r\n\tforEach(action:PredicateWithIndex<T>, max?:number):number\r\n\tforEach(action:ActionWithIndex<T> | PredicateWithIndex<T>, max:number = Infinity):number\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tif(!action)\r\n\t\t\tthrow new ArgumentNullException(\"action\");\r\n\t\tthrowIfEndless(_.isEndless);\r\n\r\n\t\t/*\r\n\t\t// It could be just as easy to do the following:\r\n\t\treturn enumUtil.forEach(_, action, max);\r\n\t\t// But to be more active about checking for disposal, we use this instead:\r\n\t\t*/\r\n\r\n\r\n\t\t// Return value of action can be anything, but if it is (===) false then the enumUtil.forEach will discontinue.\r\n\t\treturn max>0 ? using(\r\n\t\t\t_.getEnumerator(), e =>\r\n\t\t\t{\r\n\r\n\t\t\t\tthrowIfEndless(!isFinite(max) && e.isEndless);\r\n\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\t// It is possible that subsequently 'action' could cause the enumeration to dispose, so we have to check each time.\r\n\t\t\t\twhile(max>i && _.throwIfDisposed() && e.moveNext())\r\n\t\t\t\t{\r\n\t\t\t\t\tif(action(<T>e.current, i++)===false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t) : 0;\r\n\t}\r\n\r\n\t// #region Conversion Methods\r\n\ttoArray(predicate?:PredicateWithIndex<T>):T[]\r\n\t{\r\n\t\treturn predicate\r\n\t\t\t? this.where(predicate).toArray()\r\n\t\t\t: this.copyTo([]);\r\n\t}\r\n\r\n\tcopyTo(target:T[], index:number = 0, count:number = Infinity):T[]\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\tif(!target) throw new ArgumentNullException(\"target\");\r\n\t\tInteger.assertZeroOrGreater(index);\r\n\r\n\t\t// If not exposing an action that could cause dispose, then use enumUtil.forEach utility instead.\r\n\t\tenumUtil.forEach<T>(this, (x, i) =>\r\n\t\t{\r\n\t\t\ttarget[i + index] = x\r\n\t\t}, count);\r\n\r\n\t\treturn target;\r\n\t}\r\n\r\n\r\n\ttoLookup<TKey, TValue>(\r\n\t\tkeySelector:SelectorWithIndex<T, TKey>,\r\n\t\telementSelector:SelectorWithIndex<T, TValue>             = Functions.Identity,\r\n\t\tcompareSelector:Selector<TKey, string | number | symbol> = Functions.Identity):ILookup<TKey, TValue>\r\n\t{\r\n\t\tconst dict:Dictionary<TKey, TValue[]> = new Dictionary<TKey, TValue[]>(compareSelector);\r\n\t\tthis.forEach(\r\n\t\t\t(x, i) =>\r\n\t\t\t{\r\n\t\t\t\tlet key = keySelector(x, i);\r\n\t\t\t\tlet element = elementSelector(x, i);\r\n\r\n\t\t\t\tlet array = dict.getValue(key);\r\n\t\t\t\tif(array!==VOID0) array.push(element);\r\n\t\t\t\telse dict.addByKeyValue(key, [element]);\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn new Lookup<TKey, TValue>(dict);\r\n\t}\r\n\r\n\ttoMap<TResult>(\r\n\t\tkeySelector:SelectorWithIndex<T, string | number | symbol>,\r\n\t\telementSelector:SelectorWithIndex<T, TResult>):IMap<TResult>\r\n\t{\r\n\t\tconst obj:IMap<TResult> = {};\r\n\t\tthis.forEach((x, i) =>\r\n\t\t{\r\n\t\t\tobj[keySelector(x, i)] = elementSelector(x, i);\r\n\t\t});\r\n\t\treturn obj;\r\n\t}\r\n\r\n\r\n\ttoDictionary<TKey, TValue>(\r\n\t\tkeySelector:SelectorWithIndex<T, TKey>,\r\n\t\telementSelector:SelectorWithIndex<T, TValue>,\r\n\t\tcompareSelector:Selector<TKey, string | number | symbol> = Functions.Identity):IDictionary<TKey, TValue>\r\n\t{\r\n\t\tconst dict:Dictionary<TKey, TValue> = new Dictionary<TKey, TValue>(compareSelector);\r\n\t\tthis.forEach((x, i) => dict.addByKeyValue(keySelector(x, i), elementSelector(x, i)));\r\n\t\treturn dict;\r\n\t}\r\n\r\n\ttoJoinedString(separator:string = \"\", selector:Selector<T, string> = Functions.Identity)\r\n\t{\r\n\t\treturn this\r\n\t\t\t.select(selector)\r\n\t\t\t.toArray()\r\n\t\t\t.join(separator);\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\r\n\ttakeExceptLast(count:number = 1):this\r\n\t{\r\n\t\tconst _ = this;\r\n\r\n\t\tif(!(count>0)) // Out of bounds?\r\n\t\t\treturn _;\r\n\r\n\t\tif(!isFinite(count)) // +Infinity equals skip all so return empty.\r\n\t\t\treturn <any> Enumerable.empty<T>();\r\n\r\n\t\tInteger.assert(count, \"count\");\r\n\t\tconst c = count;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet q:Queue<T>;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t\tq = new Queue<T>();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhile(enumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// Add the next one to the queue.\r\n\t\t\t\t\t\t\tq.enqueue(<T>enumerator.current);\r\n\r\n\t\t\t\t\t\t\t// Did we reach our quota?\r\n\t\t\t\t\t\t\tif(q.count>c)\r\n\t\t\t\t\t\t\t// Okay then, start returning results.\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(q.dequeue());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\tif(q) q.dispose();\r\n\t\t\t\t\t\tq = NULL;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tskipToLast(count:number):this\r\n\t{\r\n\t\tif(!(count>0)) // Out of bounds? Empty.\r\n\t\t\treturn <any> Enumerable.empty<T>();\r\n\r\n\t\tconst _ = this;\r\n\r\n\t\tif(!isFinite(count)) // Infinity means return all.\r\n\t\t\treturn _;\r\n\r\n\t\tInteger.assert(count, \"count\");\r\n\r\n\t\t// This sets up the query so nothing is done until move next is called.\r\n\t\treturn <any> _.reverse()\r\n\t\t\t.take(count)\r\n\t\t\t.reverse();\r\n\t}\r\n\r\n\t// To help with type guarding.\r\n\r\n\tselect<TResult>(selector:SelectorWithIndex<T, TResult>):LinqEnumerable<TResult>\r\n\t{\r\n\t\treturn <LinqEnumerable<TResult>>super.select(selector);\r\n\t}\r\n\r\n\tmap<TResult>(selector:SelectorWithIndex<T, TResult>):LinqEnumerable<TResult>\r\n\t{\r\n\t\treturn <LinqEnumerable<TResult>>super.select(selector);\r\n\t}\r\n\r\n\tselectMany<TResult>(\r\n\t\tcollectionSelector:SelectorWithIndex<T, ForEachEnumerable<TResult> | null | undefined>):LinqEnumerable<TResult>;\r\n\r\n\tselectMany<TElement, TResult>(\r\n\t\tcollectionSelector:SelectorWithIndex<T, ForEachEnumerable<TElement> | null | undefined>,\r\n\t\tresultSelector:(collection:T, element:TElement) => TResult):LinqEnumerable<TResult>;\r\n\r\n\tselectMany<TResult>(\r\n\t\tcollectionSelector:SelectorWithIndex<T, ForEachEnumerable<any> | null | undefined>,\r\n\t\tresultSelector?:(collection:T, element:any) => TResult):LinqEnumerable<TResult>\r\n\t{\r\n\t\treturn this._selectMany(collectionSelector, resultSelector);\r\n\t}\r\n\r\n\tchoose():LinqEnumerable<T>;\r\n\tchoose<TResult>(selector:SelectorWithIndex<T, TResult>):LinqEnumerable<TResult>\r\n\tchoose(selector:SelectorWithIndex<T, any> = Functions.Identity):LinqEnumerable<any>\r\n\t{\r\n\t\treturn this._filterSelected(selector, isNotNullOrUndefined);\r\n\t}\r\n\r\n\treverse():this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet disposed = !_.throwIfDisposed();\r\n\t\tthrowIfEndless(_._isEndless); // Cannot reverse an endless collection...\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet buffer:T[];\r\n\t\t\t\tlet index:number = 0;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\t_.throwIfDisposed();\r\n\t\t\t\t\t\tbuffer = _.toArray();\r\n\t\t\t\t\t\tindex = buffer.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) => !!index && yielder.yieldReturn(buffer[--index]),\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbuffer.length = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tdisposed = true;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tshuffle():this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet disposed = !_.throwIfDisposed();\r\n\t\tthrowIfEndless(_._isEndless); // Cannot shuffle an endless collection...\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet buffer:T[];\r\n\t\t\t\tlet capacity:number;\r\n\t\t\t\tlet len:number;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\tbuffer = _.toArray();\r\n\t\t\t\t\t\tcapacity = len = buffer.length;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Avoid using major array operations like .slice();\r\n\t\t\t\t\t\tif(!len)\r\n\t\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\r\n\t\t\t\t\t\tlet selectedIndex = Random.integer(len);\r\n\t\t\t\t\t\tlet selectedValue = buffer[selectedIndex];\r\n\r\n\t\t\t\t\t\tbuffer[selectedIndex] = buffer[--len]; // Take the last one and put it here.\r\n\t\t\t\t\t\tbuffer[len] = NULL; // clear possible reference.\r\n\r\n\t\t\t\t\t\tif(len%32==0) // Shrink?\r\n\t\t\t\t\t\t\tbuffer.length = len;\r\n\r\n\t\t\t\t\t\treturn yielder.yieldReturn(selectedValue);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbuffer.length = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tdisposed = true;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tcount(predicate?:PredicateWithIndex<T>):number\r\n\t{\r\n\t\tlet count:number = 0;\r\n\t\tthis.forEach(\r\n\t\t\tpredicate\r\n\r\n\t\t\t\t? (x, i) =>\r\n\t\t\t{\r\n\t\t\t\tif(predicate(x, i)) ++count;\r\n\t\t\t}\r\n\r\n\t\t\t\t: () =>\r\n\t\t\t{\r\n\t\t\t\t++count;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn count;\r\n\t}\r\n\r\n\t// Akin to '.every' on an array.\r\n\tall(predicate:PredicateWithIndex<T>):boolean\r\n\t{\r\n\t\tif(!predicate)\r\n\t\t\tthrow new ArgumentNullException(\"predicate\");\r\n\r\n\t\tlet result = true;\r\n\t\tthis.forEach((x, i) =>\r\n\t\t{\r\n\t\t\tif(!predicate(x, i))\r\n\t\t\t{\r\n\t\t\t\tresult = false;\r\n\t\t\t\treturn false; // break\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// 'every' has been added here for parity/compatibility with an array.\r\n\tevery(predicate:PredicateWithIndex<T>):boolean\r\n\t{\r\n\t\treturn this.all(predicate);\r\n\t}\r\n\r\n\t// Akin to '.some' on an array.\r\n\tany(predicate?:PredicateWithIndex<T>):boolean\r\n\t{\r\n\t\tif(!predicate)\r\n\t\t\treturn super.any();\r\n\r\n\t\tlet result = false;\r\n\t\t// Splitting the forEach up this way reduces iterative processing.\r\n\t\t// forEach handles the generation and disposal of the enumerator.\r\n\t\tthis.forEach(\r\n\t\t\t(x, i) =>\r\n\t\t\t{\r\n\t\t\t\tresult = predicate(x, i); // false = not found and therefore it should continue.  true = found and break;\r\n\t\t\t\treturn !result;\r\n\t\t\t});\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t// 'some' has been added here for parity/compatibility with an array.\r\n\tsome(predicate?:PredicateWithIndex<T>):boolean\r\n\t{\r\n\t\treturn this.any(predicate);\r\n\t}\r\n\r\n\r\n\tcontains(value:T, compareSelector?:Selector<T, any>):boolean\r\n\t{\r\n\t\tif(compareSelector)\r\n\t\t{\r\n\t\t\tconst s = compareSelector(value);\r\n\t\t\treturn this.any(v => areEqualValues(compareSelector(v), s));\r\n\t\t}\r\n\t\treturn this.any(v => areEqualValues(v, value));\r\n\t}\r\n\r\n\t// Originally has an overload for a predicate,\r\n\t// but that's a bad idea since this could be an enumeration of functions and therefore fail the intent.\r\n\t// Better to chain a where statement first to be more explicit.\r\n\tindexOf(value:T, compareSelector?:SelectorWithIndex<T, any>):number\r\n\t{\r\n\t\tlet found:number = -1;\r\n\t\tthis.forEach(\r\n\t\t\tcompareSelector\r\n\t\t\t\t? (element:T, i:number) =>\r\n\t\t\t{\r\n\t\t\t\tif(areEqualValues(compareSelector(element, i), compareSelector(value, i), true))\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = i;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t: (element:T, i:number) =>\r\n\t\t\t{\r\n\t\t\t\t// Why?  Because NaN doesn't equal NaN. :P\r\n\t\t\t\tif(areEqualValues(element, value, true))\r\n\t\t\t\t{\r\n\t\t\t\t\tfound = i;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\r\n\t\treturn found;\r\n\t}\r\n\r\n\tlastIndexOf(value:T, compareSelector?:SelectorWithIndex<T, any>):number\r\n\t{\r\n\t\tlet result:number = -1;\r\n\t\tthis.forEach(\r\n\t\t\tcompareSelector\r\n\t\t\t\t? (element:T, i:number) =>\r\n\t\t\t{\r\n\t\t\t\tif(areEqualValues(compareSelector(element, i), compareSelector(value, i), true)) result\r\n\t\t\t\t\t= i;\r\n\t\t\t}\r\n\r\n\t\t\t\t: (element:T, i:number) =>\r\n\t\t\t{\r\n\t\t\t\tif(areEqualValues(element, value, true)) result = i;\r\n\t\t\t});\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\r\n\tintersect(\r\n\t\tsecond:ForEachEnumerable<T>,\r\n\t\tcompareSelector?:Selector<T, string | number | symbol>):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(!second)\r\n\t\t\tthrow new ArgumentNullException(\"second\");\r\n\r\n\t\tconst isEndless = _.isEndless;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet keys:Dictionary<T, boolean>;\r\n\t\t\t\tlet outs:Dictionary<T, boolean>;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!second);\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\r\n\t\t\t\t\t\tkeys = new Dictionary<T, boolean>(compareSelector);\r\n\t\t\t\t\t\touts = new Dictionary<T, boolean>(compareSelector);\r\n\r\n\t\t\t\t\t\tenumUtil.forEach(second, key =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tkeys.addByKeyValue(key, true);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\twhile(enumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet current = <T>enumerator.current;\r\n\t\t\t\t\t\t\tif(!outs.containsKey(current) && keys.containsKey(current))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\touts.addByKeyValue(current, true);\r\n\t\t\t\t\t\t\t\treturn yielder.yieldReturn(current);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tif(keys) enumerator.dispose();\r\n\t\t\t\t\t\tif(outs) enumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\tkeys = NULL;\r\n\t\t\t\t\t\touts = NULL;\r\n\t\t\t\t\t},\r\n\t\t\t\t\tisEndless\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tsecond = NULL;\r\n\t\t\t},\r\n\t\t\tisEndless\r\n\t\t);\r\n\t}\r\n\r\n\tsequenceEqual(\r\n\t\tsecond:ForEachEnumerable<T>,\r\n\t\tequalityComparer:EqualityComparison<T> = areEqualValues):boolean\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\r\n\t\treturn using(\r\n\t\t\tthis.getEnumerator(),\r\n\t\t\te1 => using(\r\n\t\t\t\tenumUtil.from(second),\r\n\t\t\t\te2 =>\r\n\t\t\t\t{\r\n\t\t\t\t\t// if both are endless, this will never evaluate.\r\n\t\t\t\t\tthrowIfEndless(e1.isEndless && e2.isEndless);\r\n\r\n\t\t\t\t\twhile(e1.moveNext())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(!e2.moveNext() || !equalityComparer(<T>e1.current, <T>e2.current))\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn !e2.moveNext();\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\t//isEquivalent(second:ForEachEnumerable<T>,\r\n\t//\tequalityComparer:EqualityComparison<T> = valuesAreEqual):boolean\r\n\t//{\r\n\t//\treturn this\r\n\t//\t\t.orderBy(keySelector)\r\n\t//\t\t.sequenceEqual(Enumerable.from(second).orderBy(keySelector))\r\n\t//}\r\n\r\n\r\n\t// #endregion\r\n\r\n\r\n\tofType<TType>(type:{ new (...params:any[]):TType }):LinqEnumerable<TType>;\r\n\tofType<TType>(type:any):LinqEnumerable<TType>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn <LinqEnumerable<TType>>super.ofType(type);\r\n\t}\r\n\r\n// #region Ordering Methods\r\n\r\n\torderBy<TKey extends Comparable>(keySelector:Selector<T, TKey> = Functions.Identity):IOrderedEnumerable<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn new OrderedEnumerable<T, TKey>(this, keySelector, Order.Ascending);\r\n\t}\r\n\r\n\torderUsing(comparison:Comparison<T>):IOrderedEnumerable<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn new OrderedEnumerable<T, any>(this, null, Order.Ascending, null, comparison);\r\n\t}\r\n\r\n\torderUsingReversed(comparison:Comparison<T>):IOrderedEnumerable<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn new OrderedEnumerable<T, any>(this, null, Order.Descending, null, comparison);\r\n\t}\r\n\r\n\torderByDescending<TKey extends Comparable>(keySelector:Selector<T, TKey> = Functions.Identity):IOrderedEnumerable<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn new OrderedEnumerable<T, TKey>(this, keySelector, Order.Descending);\r\n\t}\r\n\r\n\t/*\r\n\t\t weightedSample(weightSelector) {\r\n\t\t weightSelector = Utils.createLambda(weightSelector);\r\n\t\t var source = this;\r\n\r\n\t\t return new LinqEnumerable<T>(() => {\r\n\t\t var sortedByBound;\r\n\t\t var totalWeight = 0;\r\n\r\n\t\t return new EnumeratorBase<T>(\r\n\t\t () => {\r\n\t\t sortedByBound = source\r\n\t\t .choose(function (x) {\r\n\t\t var weight = weightSelector(x);\r\n\t\t if (weight <= 0) return null; // ignore 0\r\n\r\n\t\t totalWeight += weight;\r\n\t\t return { value: x, bound: totalWeight }\r\n\t\t })\r\n\t\t .toArray();\r\n\t\t },\r\n\t\t () => {\r\n\t\t if (sortedByBound.length > 0) {\r\n\t\t var draw = (Math.random() * totalWeight) + 1;\r\n\r\n\t\t var lower = -1;\r\n\t\t var upper = sortedByBound.length;\r\n\t\t while (upper - lower > 1) {\r\n\t\t var index = ((lower + upper) / 2);\r\n\t\t if (sortedByBound[index].bound >= draw) {\r\n\t\t upper = index;\r\n\t\t }\r\n\t\t else {\r\n\t\t lower = index;\r\n\t\t }\r\n\t\t }\r\n\r\n\t\t return (<any>this).yieldReturn(sortedByBound[upper].value);\r\n\t\t }\r\n\r\n\t\t return (<any>this).yieldBreak();\r\n\t\t },\r\n\t\t Functions.Blank);\r\n\t\t });\r\n\t\t }\r\n\t\t */\r\n\t// #endregion\r\n\r\n\tbuffer(size:number):LinqEnumerable<T[]>\r\n\t{\r\n\t\treturn <LinqEnumerable<T[]>>super.buffer(size);\r\n\t}\r\n\r\n\t// #region Grouping Methods\r\n\r\n\t// Originally contained a result selector (not common use), but this could be done simply by a select statement after.\r\n\r\n\tgroupBy<TKey>(keySelector:SelectorWithIndex<T, TKey>):LinqEnumerable<IGrouping<TKey, T>>;\r\n\r\n\tgroupBy<TKey>(\r\n\t\tkeySelector:SelectorWithIndex<T, TKey>,\r\n\t\telementSelector:SelectorWithIndex<T, T>,\r\n\t\tcompareSelector?:Selector<TKey, string | number | symbol>):LinqEnumerable<IGrouping<TKey, T>>;\r\n\r\n\tgroupBy<TKey, TElement>(\r\n\t\tkeySelector:SelectorWithIndex<T, TKey>,\r\n\t\telementSelector:SelectorWithIndex<T, TElement>,\r\n\t\tcompareSelector?:Selector<TKey, string | number | symbol>):LinqEnumerable<IGrouping<TKey, TElement>>\r\n\r\n\r\n\tgroupBy<TKey, TElement>(\r\n\t\tkeySelector:SelectorWithIndex<T, TKey> | Selector<T, TKey>,\r\n\t\telementSelector?:SelectorWithIndex<T, TElement> | Selector<T, TElement>,\r\n\t\tcompareSelector?:Selector<TKey, string | number | symbol>):LinqEnumerable<IGrouping<TKey, TElement>>\r\n\t{\r\n\t\tif(!elementSelector) elementSelector = Functions.Identity; // Allow for 'null' and not just undefined.\r\n\t\treturn new LinqEnumerable<IGrouping<TKey, TElement>>(\r\n\t\t\t() => this\r\n\t\t\t\t.toLookup(keySelector, elementSelector, compareSelector)\r\n\t\t\t\t.getEnumerator()\r\n\t\t);\r\n\t}\r\n\r\n\tpartitionBy<TKey>(keySelector:Selector<T, TKey>):LinqEnumerable<IGrouping<TKey, T>>;\r\n\tpartitionBy<TKey, TElement>(\r\n\t\tkeySelector:Selector<T, TKey>,\r\n\t\telementSelector?:Selector<T, TElement>,\r\n\t\tresultSelector?:(key:TKey, element:TElement[]) => IGrouping<TKey, TElement>,\r\n\t\tcompareSelector?:Selector<TKey, any>):LinqEnumerable<IGrouping<TKey, TElement>>;\r\n\tpartitionBy<TKey, TElement>(\r\n\t\tkeySelector:Selector<T, TKey>,\r\n\t\telementSelector?:Selector<T, TElement>,\r\n\t\tresultSelector:(key:TKey, element:TElement[]) => IGrouping<TKey, TElement>\r\n\t\t\t= (key:TKey, elements:TElement[]) => new Grouping<TKey, TElement>(key, elements),\r\n\t\tcompareSelector:Selector<TKey, any>\r\n\t\t\t= Functions.Identity):LinqEnumerable<IGrouping<TKey, T>> | LinqEnumerable<IGrouping<TKey, TElement>>\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\tif(!elementSelector) elementSelector = Functions.Identity; // Allow for 'null' and not just undefined.\r\n\t\treturn new LinqEnumerable<IGrouping<TKey, TElement>>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet enumerator:IEnumerator<T>;\r\n\t\t\t\tlet key:TKey;\r\n\t\t\t\tlet compareKey:any;\r\n\t\t\t\tlet group:TElement[] | null;\r\n\t\t\t\tlet len:number;\r\n\r\n\t\t\t\treturn new EnumeratorBase<IGrouping<TKey, TElement>>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!elementSelector);\r\n\t\t\t\t\t\tenumerator = _.getEnumerator();\r\n\t\t\t\t\t\tif(enumerator.moveNext())\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlet v = <T>enumerator.current;\r\n\t\t\t\t\t\t\tkey = keySelector(v);\r\n\t\t\t\t\t\t\tcompareKey = compareSelector(key);\r\n\t\t\t\t\t\t\tgroup = [elementSelector!(v)];\r\n\t\t\t\t\t\t\tlen = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tgroup = null;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!elementSelector);\r\n\r\n\t\t\t\t\t\tif(!group)\r\n\t\t\t\t\t\t\treturn yielder.yieldBreak();\r\n\r\n\t\t\t\t\t\tlet hasNext:boolean, c:T;\r\n\t\t\t\t\t\twhile((hasNext = enumerator.moveNext()))\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tc = <T>enumerator.current;\r\n\t\t\t\t\t\t\tif(areEqualValues(compareKey, compareSelector(keySelector(c))))\r\n\t\t\t\t\t\t\t\tgroup[len++] = elementSelector!(c);\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet result:IGrouping<TKey, TElement>\r\n\t\t\t\t\t\t\t    = resultSelector(key, group);\r\n\r\n\t\t\t\t\t\tif(hasNext)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tc = <T>enumerator.current;\r\n\t\t\t\t\t\t\tkey = keySelector(c);\r\n\t\t\t\t\t\t\tcompareKey = compareSelector(key);\r\n\t\t\t\t\t\t\tgroup = [elementSelector!(c)];\r\n\t\t\t\t\t\t\tlen = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tgroup = null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn yielder.yieldReturn(result);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\t\t\tenumerator = NULL;\r\n\t\t\t\t\t\tgroup = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\telementSelector = NULL;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\t// #region Aggregate Methods\r\n\r\n\tflatten<TFlat>():LinqEnumerable<TFlat>\r\n\tflatten():LinqEnumerable<any>\r\n\tflatten():LinqEnumerable<any>\r\n\t{\r\n\t\treturn <any>super.flatten();\r\n\t}\r\n\r\n\tpairwise<TSelect>(\r\n\t\tselector:(\r\n\t\t\tprevious:T, current:T,\r\n\t\t\tindex:number) => TSelect):LinqEnumerable<TSelect>\r\n\t{\r\n\t\treturn <any>super.pairwise(selector);\r\n\t}\r\n\r\n\taggregate(\r\n\t\treduction:(previous:T, current:T, index?:number) => T):T | undefined;\r\n\r\n\taggregate<U>(\r\n\t\treduction:(previous:U, current:T, index?:number) => U,\r\n\t\tinitialValue:U):U;\r\n\r\n\taggregate<U>(\r\n\t\treduction:(previous:U, current:T, index?:number) => U,\r\n\t\tinitialValue?:U):U | undefined\r\n\t{\r\n\t\tif(initialValue==VOID0)\r\n\t\t{\r\n\t\t\tthis.forEach((value, i) =>\r\n\t\t\t{\r\n\t\t\t\tinitialValue = i\r\n\t\t\t\t\t? reduction(initialValue!, value, i)\r\n\t\t\t\t\t: <any>value\r\n\t\t\t});\r\n\t\t} else {\r\n\r\n\t\t\tthis.forEach((value, i) =>\r\n\t\t\t{\r\n\t\t\t\tinitialValue = reduction(initialValue!, value, i)\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t\treturn initialValue;\r\n\t}\r\n\r\n\treduce<T>(\r\n\t\treduction:(previous:T, current:T, index?:number) => T):T | undefined;\r\n\r\n\treduce<U>(\r\n\t\treduction:(previous:U, current:T, index?:number) => U,\r\n\t\tinitialValue:U):U;\r\n\r\n\t/**\r\n\t * Provided as an analog for array.reduce.  Simply a shortcut for aggregate.\r\n\t * @param reduction\r\n\t * @param initialValue\r\n\t */\r\n\treduce<U>(\r\n\t\treduction:(previous:U, current:T, index?:number) => U,\r\n\t\tinitialValue?:U):U | undefined\r\n\t{\r\n\t\treturn this.aggregate(reduction, initialValue);\r\n\t}\r\n\r\n\taverage(selector:SelectorWithIndex<T, number> = Type.numberOrNaN):number\r\n\t{\r\n\t\tlet count = 0;\r\n\t\tconst sum = this.sum((e, i) =>\r\n\t\t{\r\n\t\t\tcount++;\r\n\t\t\treturn selector(e, i);\r\n\t\t});\r\n\r\n\t\treturn (isNaN(sum) || !count)\r\n\t\t\t? NaN\r\n\t\t\t: (sum/count);\r\n\t}\r\n\r\n\t// If using numbers, it may be useful to call .takeUntil(v=>v==Infinity,true) before calling max. See static versions for numbers.\r\n\tmax():T | undefined\r\n\t{\r\n\t\treturn this.aggregate(Functions.Greater);\r\n\t}\r\n\r\n\tmin():T | undefined\r\n\t{\r\n\t\treturn this.aggregate(Functions.Lesser);\r\n\t}\r\n\r\n\tmaxBy(keySelector:Selector<T, Primitive> = Functions.Identity):T | undefined\r\n\t{\r\n\t\treturn this.aggregate((a:T, b:T) => (keySelector(a)>keySelector(b)) ? a : b);\r\n\t}\r\n\r\n\tminBy(keySelector:Selector<T, Primitive> = Functions.Identity):T | undefined\r\n\t{\r\n\t\treturn this.aggregate((a:T, b:T) => (keySelector(a)<keySelector(b)) ? a : b);\r\n\t}\r\n\r\n\t// Addition...  Only works with numerical enumerations.\r\n\tsum(selector:SelectorWithIndex<T, number> = Type.numberOrNaN):number\r\n\t{\r\n\t\tlet sum = 0;\r\n\r\n\t\t// This allows for infinity math that doesn't destroy the other values.\r\n\t\tlet sumInfinite = 0; // Needs more investigation since we are really trying to retain signs.\r\n\r\n\t\tthis.forEach(\r\n\t\t\t(x, i) =>\r\n\t\t\t{\r\n\t\t\t\tlet value = selector(x, i);\r\n\t\t\t\tif(isNaN(value))\r\n\t\t\t\t{\r\n\t\t\t\t\tsum = NaN;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(isFinite(value))\r\n\t\t\t\t\tsum += value;\r\n\t\t\t\telse\r\n\t\t\t\t\tsumInfinite +=\r\n\t\t\t\t\t\tvalue>0 ? (+1) : (-1);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn isNaN(sum) ? NaN : (sumInfinite ? (sumInfinite*Infinity) : sum);\r\n\t}\r\n\r\n\t// Multiplication...\r\n\tproduct(selector:SelectorWithIndex<T, number> = Type.numberOrNaN):number\r\n\t{\r\n\t\tlet result = 1, exists:boolean = false;\r\n\r\n\t\tthis.forEach(\r\n\t\t\t(x, i) =>\r\n\t\t\t{\r\n\t\t\t\texists = true;\r\n\t\t\t\tlet value = selector(x, i);\r\n\t\t\t\tif(isNaN(value))\r\n\t\t\t\t{\r\n\t\t\t\t\tresult = NaN;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(value==0)\r\n\t\t\t\t{\r\n\t\t\t\t\tresult = 0; // Multiplying by zero will always end in zero.\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Multiplication can never recover from infinity and simply must retain signs.\r\n\t\t\t\t// You could cancel out infinity with 1/infinity but no available representation exists.\r\n\t\t\t\tresult *= value;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn (exists && isNaN(result)) ? NaN : result;\r\n\t}\r\n\r\n\t/**\r\n\t * Takes the first number and divides it by all following.\r\n\t * @param selector\r\n\t * @returns {number}\r\n\t */\r\n\tquotient(selector:SelectorWithIndex<T, number> = Type.numberOrNaN):number\r\n\t{\r\n\t\tlet count = 0;\r\n\t\tlet result:number = NaN;\r\n\r\n\t\tthis.forEach(\r\n\t\t\t(x, i) =>\r\n\t\t\t{\r\n\t\t\t\tlet value = selector(x, i);\r\n\t\t\t\tcount++;\r\n\r\n\t\t\t\tif(count===1)\r\n\t\t\t\t{\r\n\t\t\t\t\tresult = value;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif(isNaN(value) || value===0 || !isFinite(value))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tresult = NaN;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult /= value;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tif(count===1)\r\n\t\t\tresult = NaN;\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\t// #region Single Value Return...\r\n\r\n\tlast():T\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tlet value:T | undefined = VOID0;\r\n\t\tlet found:boolean = false;\r\n\t\t_.forEach(\r\n\t\t\tx =>\r\n\t\t\t{\r\n\t\t\t\tfound = true;\r\n\t\t\t\tvalue = x;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tif(!found) throw new Error(\"last:No element satisfies the condition.\");\r\n\t\treturn <any>value;\r\n\t}\r\n\r\n\tlastOrDefault():T | undefined\r\n\tlastOrDefault(defaultValue:T):T\r\n\tlastOrDefault(defaultValue?:T):T | undefined\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tlet value:T | undefined = VOID0;\r\n\t\tlet found:boolean = false;\r\n\t\t_.forEach(\r\n\t\t\tx =>\r\n\t\t\t{\r\n\t\t\t\tfound = true;\r\n\t\t\t\tvalue = x;\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn (!found) ? defaultValue : value;\r\n\t}\r\n\r\n\t// #endregion\r\n\r\n\tmemoize():this\r\n\t{\r\n\t\tlet source = new LazyList(this);\r\n\t\treturn <this>(new LinqEnumerable(() => source.getEnumerator(), () =>\r\n\t\t{\r\n\t\t\tsource.dispose();\r\n\t\t\tsource = <any>null\r\n\t\t}, this.isEndless));\r\n\t}\r\n\r\n\tthrowWhenEmpty():NotEmptyEnumerable<T>\r\n\t{\r\n\t\treturn <any>this.doAction(RETURN, null, this.isEndless, count =>\r\n\t\t{\r\n\t\t\tif(!count) throw \"Collection is empty.\";\r\n\t\t});\r\n\t}\r\n}\r\n\r\n// Provided for type guarding.\r\nexport class FiniteEnumerable<T>\r\n\textends LinqEnumerable<T>\r\n\timplements IFiniteEnumerable<T>\r\n{\r\n\tconstructor(\r\n\t\tenumeratorFactory:() => IEnumerator<T>,\r\n\t\tfinalizer?:Closure)\r\n\t{\r\n\t\tsuper(enumeratorFactory, finalizer, false);\r\n\t\tthis._disposableObjectName = \"FiniteEnumerable\";\r\n\t}\r\n\r\n}\r\n\r\nclass ArrayEnumerable<T>\r\n\textends FiniteEnumerable<T>\r\n{\r\n\tprivate _source:ArrayLike<T>;\r\n\r\n\tconstructor(source:ArrayLike<T>)\r\n\t{\r\n\t\tsuper(() =>\r\n\t\t{\r\n\t\t\t_.throwIfDisposed();\r\n\t\t\treturn new ArrayEnumerator<T>(() =>\r\n\t\t\t{\r\n\t\t\t\t_.throwIfDisposed(\"The underlying ArrayEnumerable was disposed.\", \"ArrayEnumerator\");\r\n\r\n\t\t\t\treturn _._source; // Should never be null, but ArrayEnumerable if not disposed simply treats null as empty array.\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tconst _ = this;\r\n\t\t_._disposableObjectName = \"ArrayEnumerable\";\r\n\t\t_._source = source;\r\n\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tsuper._onDispose();\r\n\t\tthis._source = NULL;\r\n\t}\r\n\r\n\tget source():ArrayLike<T>\r\n\t{\r\n\t\treturn this._source;\r\n\t}\r\n\r\n\ttoArray():T[]\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\treturn enumUtil.toArray(_._source);\r\n\t}\r\n\r\n\tasEnumerable():this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\treturn <any> new ArrayEnumerable<T>(this._source);\r\n\t}\r\n\r\n\t// Optimize forEach so that subsequent usage is optimized.\r\n\tforEach(action:ActionWithIndex<T>, max?:number):number\r\n\tforEach(action:PredicateWithIndex<T>, max?:number):number\r\n\tforEach(action:ActionWithIndex<T> | PredicateWithIndex<T>, max:number = Infinity):number\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\treturn enumUtil.forEach(_._source, action, max);\r\n\t}\r\n\r\n\t// These methods should ALWAYS check for array length before attempting anything.\r\n\r\n\tany(predicate?:Predicate<T>):boolean\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tconst source = _._source;\r\n\t\tlet len = source.length;\r\n\t\treturn !!len && (!predicate || super.any(predicate));\r\n\t}\r\n\r\n\tcount(predicate?:Predicate<T>):number\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tconst source = _._source, len = source.length;\r\n\t\treturn len && (predicate ? super.count(predicate) : len);\r\n\t}\r\n\r\n\telementAtOrDefault(index:number):T | undefined\r\n\telementAtOrDefault(index:number, defaultValue:T):T\r\n\telementAtOrDefault(index:number, defaultValue?:T):T | undefined\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\t\tInteger.assertZeroOrGreater(index, 'index');\r\n\r\n\t\tconst source = _._source;\r\n\t\treturn index<source.length\r\n\t\t\t? source[index]\r\n\t\t\t: defaultValue;\r\n\t}\r\n\r\n\tlast():T\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tconst source = _._source, len = source.length;\r\n\t\treturn (len)\r\n\t\t\t? source[len - 1]\r\n\t\t\t: super.last();\r\n\t}\r\n\r\n\tlastOrDefault():T | undefined\r\n\tlastOrDefault(defaultValue:T):T\r\n\tlastOrDefault(defaultValue?:T):T | undefined\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tconst source = _._source, len = source.length;\r\n\t\treturn len\r\n\t\t\t? source[len - 1]\r\n\t\t\t: defaultValue;\r\n\t}\r\n\r\n\tskip(count:number):this\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(!(count>0))\r\n\t\t\treturn _;\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() => new ArrayEnumerator<T>(() => _._source, count)\r\n\t\t);\r\n\t}\r\n\r\n\ttakeExceptLast(count:number = 1):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\treturn <any> _.take(_._source.length - count);\r\n\t}\r\n\r\n\tskipToLast(count:number):this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tif(!(count>0))\r\n\t\t\treturn <any> Enumerable.empty<T>();\r\n\r\n\t\tif(!isFinite(count))\r\n\t\t\treturn _;\r\n\r\n\t\tconst len = _._source\r\n\t\t\t? _._source.length\r\n\t\t\t: 0;\r\n\r\n\t\treturn <any> _.skip(len - count);\r\n\t}\r\n\r\n\treverse():this\r\n\t{\r\n\t\tconst _ = this;\r\n\t\tlet disposed = !_.throwIfDisposed();\r\n\r\n\t\treturn <any> new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\t_.throwIfDisposed();\r\n\t\t\t\treturn new IndexEnumerator<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet s = _._source;\r\n\t\t\t\t\t\tthrowIfDisposed(disposed || !s);\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tsource: s,\r\n\t\t\t\t\t\t\tpointer: (s.length - 1),\r\n\t\t\t\t\t\t\tlength: s.length,\r\n\t\t\t\t\t\t\tstep: -1\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tdisposed = true;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tmemoize():this\r\n\t{\r\n\t\treturn this.asEnumerable();\r\n\t}\r\n\r\n\tsequenceEqual(\r\n\t\tsecond:ForEachEnumerable<T>,\r\n\t\tequalityComparer:EqualityComparison<T> = areEqualValues):boolean\r\n\t{\r\n\t\tif(Type.isArrayLike(second))\r\n\t\t\treturn Arrays.areEqual(this.source, second, true, equalityComparer);\r\n\r\n\t\tif(second instanceof ArrayEnumerable)\r\n\t\t\treturn second.sequenceEqual(this.source, equalityComparer);\r\n\r\n\t\treturn super.sequenceEqual(second, equalityComparer);\r\n\t}\r\n\r\n\r\n\ttoJoinedString(separator:string = \"\", selector:Selector<T, string> = Functions.Identity)\r\n\t{\r\n\t\tconst s = this._source;\r\n\t\treturn !selector && (s) instanceof (Array)\r\n\t\t\t? (<Array<T>>s).join(separator)\r\n\t\t\t: super.toJoinedString(separator, selector);\r\n\t}\r\n\r\n}\r\n\r\n\r\nclass Grouping<TKey, TElement>\r\n\textends ArrayEnumerable<TElement>\r\n\timplements IGrouping<TKey, TElement>\r\n{\r\n\r\n\tconstructor(private _groupKey:TKey, elements:TElement[])\r\n\t{\r\n\t\tsuper(elements);\r\n\t\tthis._disposableObjectName = \"Grouping\";\r\n\t}\r\n\r\n\tget key():TKey\r\n\t{\r\n\t\treturn this._groupKey;\r\n\t}\r\n}\r\n\r\nclass Lookup<TKey, TElement>\r\n\timplements ILookup<TKey, TElement>\r\n{\r\n\r\n\tconstructor(private _dictionary:IDictionary<TKey, TElement[]>)\r\n\t{\r\n\t}\r\n\r\n\tget count():number\r\n\t{\r\n\t\treturn this._dictionary.count;\r\n\t}\r\n\r\n\tget(key:TKey):TElement[] | null\r\n\t{\r\n\t\treturn this._dictionary.getValue(key) || null;\r\n\t}\r\n\r\n\tcontains(key:TKey):boolean\r\n\t{\r\n\t\treturn this._dictionary.containsKey(key);\r\n\t}\r\n\r\n\tgetEnumerator():IEnumerator<Grouping<TKey, TElement>>\r\n\t{\r\n\r\n\t\tconst _ = this;\r\n\t\tlet enumerator:IEnumerator<IKeyValuePair<TKey, TElement[]>>;\r\n\r\n\t\treturn new EnumeratorBase<Grouping<TKey, TElement>>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tenumerator = _._dictionary.getEnumerator();\r\n\t\t\t},\r\n\t\t\t(yielder) =>\r\n\t\t\t{\r\n\r\n\t\t\t\tif(!enumerator.moveNext())\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\tlet current = <IKeyValuePair<TKey, TElement[]>>enumerator.current;\r\n\t\t\t\treturn yielder.yieldReturn(new Grouping<TKey, TElement>(current.key, current.value));\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tif(enumerator) enumerator.dispose();\r\n\t\t\t\tenumerator = NULL;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\n\r\nclass OrderedEnumerable<T, TOrderBy extends Comparable>\r\n\textends FiniteEnumerable<T>\r\n\timplements IOrderedEnumerable<T>\r\n{\r\n\r\n\tconstructor(\r\n\t\tprivate source:IEnumerable<T>,\r\n\t\tpublic keySelector:Selector<T, TOrderBy> | null,\r\n\t\tpublic order:Order,\r\n\t\tpublic parent?:OrderedEnumerable<T, any> | null,\r\n\t\tpublic comparer:Comparison<T> = compareValues)\r\n\t{\r\n\t\tsuper(NULL);\r\n\t\tthrowIfEndless(source && source.isEndless);\r\n\t\tthis._disposableObjectName = \"OrderedEnumerable\";\r\n\t}\r\n\r\n\tprivate createOrderedEnumerable(\r\n\t\tkeySelector:Selector<T, TOrderBy>,\r\n\t\torder:Order):IOrderedEnumerable<T>\r\n\t{\r\n\t\tthis.throwIfDisposed();\r\n\t\treturn new OrderedEnumerable<T, TOrderBy>(this.source, keySelector, order, this);\r\n\t}\r\n\r\n\tthenBy(keySelector:(value:T) => TOrderBy):IOrderedEnumerable<T>\r\n\t{\r\n\t\treturn this.createOrderedEnumerable(keySelector, Order.Ascending);\r\n\t}\r\n\r\n\tthenUsing(comparison:Comparison<T>):IOrderedEnumerable<T>\r\n\t{\r\n\t\treturn new OrderedEnumerable<T, any>(this.source, null, Order.Ascending, this, comparison);\r\n\t}\r\n\r\n\tthenByDescending(keySelector:(value:T) => TOrderBy):IOrderedEnumerable<T>\r\n\t{\r\n\t\treturn this.createOrderedEnumerable(keySelector, Order.Descending);\r\n\t}\r\n\r\n\tthenUsingReversed(comparison:Comparison<T>):IOrderedEnumerable<T>\r\n\t{\r\n\t\treturn new OrderedEnumerable<T, any>(this.source, null, Order.Descending, this, comparison);\r\n\t}\r\n\r\n\tgetEnumerator():EnumeratorBase<T>\r\n\t{\r\n\t\tconst _ = this;\r\n\t\t_.throwIfDisposed();\r\n\r\n\t\tlet buffer:T[];\r\n\t\tlet indexes:number[];\r\n\t\tlet index:number = 0;\r\n\r\n\t\treturn new EnumeratorBase<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\t_.throwIfDisposed();\r\n\t\t\t\tindex = 0;\r\n\t\t\t\tbuffer = Enumerable.toArray(_.source);\r\n\t\t\t\tindexes = createSortContext(_)\r\n\t\t\t\t\t.generateSortedIndexes(buffer);\r\n\t\t\t},\r\n\r\n\t\t\t(yielder) =>\r\n\t\t\t{\r\n\t\t\t\t_.throwIfDisposed();\r\n\t\t\t\treturn (index<indexes.length)\r\n\t\t\t\t\t? yielder.yieldReturn(buffer[indexes[index++]])\r\n\t\t\t\t\t: false;\r\n\t\t\t},\r\n\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tif(buffer)\r\n\t\t\t\t\tbuffer.length = 0;\r\n\t\t\t\tbuffer = NULL;\r\n\t\t\t\tif(indexes)\r\n\t\t\t\t\tindexes.length = 0;\r\n\t\t\t\tindexes = NULL;\r\n\t\t\t},\r\n\r\n\t\t\tfalse\r\n\t\t);\r\n\t}\r\n\r\n\tprotected _onDispose():void\r\n\t{\r\n\t\tconst _:this = this;\r\n\t\tsuper._onDispose();\r\n\t\t_.source = NULL;\r\n\t\t_.keySelector = NULL;\r\n\t\t_.order = NULL;\r\n\t\t_.parent = NULL;\r\n\t}\r\n\r\n}\r\n\r\n// A private static helper for the weave function.\r\nfunction nextEnumerator<T>(queue:Queue<IEnumerator<T>>, e:IEnumerator<T>):IEnumerator<T> | null\r\n{\r\n\tif(e)\r\n\t{\r\n\t\tif(e.moveNext())\r\n\t\t{\r\n\t\t\tqueue.enqueue(e);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(e) e.dispose();\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\treturn e;\r\n}\r\n\r\n/**\r\n * Recursively builds a SortContext chain.\r\n * @param orderedEnumerable\r\n * @param currentContext\r\n * @returns {any}\r\n */\r\nfunction createSortContext<T, TOrderBy extends Comparable>(\r\n\torderedEnumerable:OrderedEnumerable<T, TOrderBy>,\r\n\tcurrentContext:IComparer<T> | null = null):KeySortedContext<T, TOrderBy>\r\n{\r\n\r\n\tconst context = new KeySortedContext<T, TOrderBy>(\r\n\t\tcurrentContext,\r\n\t\torderedEnumerable.keySelector,\r\n\t\torderedEnumerable.order,\r\n\t\torderedEnumerable.comparer);\r\n\r\n\tif(orderedEnumerable.parent)\r\n\t\treturn createSortContext(orderedEnumerable.parent, context);\r\n\r\n\treturn context;\r\n}\r\n\r\n// #region Helper Functions...\r\n// This allows for the use of a boolean instead of calling this.throwIfDisposed()\r\n// since there is a strong chance of introducing a circular reference.\r\n\r\nfunction throwIfDisposed(disposed:true):true\r\n//noinspection JSUnusedLocalSymbols\r\nfunction throwIfDisposed(disposed:false):never\r\n//noinspection JSUnusedLocalSymbols\r\nfunction throwIfDisposed(disposed:boolean):true | never\r\n//noinspection JSUnusedLocalSymbols\r\nfunction throwIfDisposed(disposed:boolean):true | never\r\n{\r\n\tif(disposed) throw new ObjectDisposedException(\"Enumerable\");\r\n\treturn true;\r\n}\r\n// #endregion\r\n\r\nexport function Enumerable<T>(\r\n\tsource:InfiniteValueFactory<T>):InfiniteLinqEnumerable<T>\r\nexport function Enumerable<T>(\r\n\tsource:ForEachEnumerable<T>,\r\n\t...additional:Array<ForEachEnumerable<T>>):LinqEnumerable<T>\r\nexport function Enumerable<T>(\r\n\tsource:ForEachEnumerable<T> | InfiniteValueFactory<T>,\r\n\t...additional:Array<ForEachEnumerable<T>>):LinqEnumerable<T>\r\n{\r\n\treturn enumerableFrom(source, additional);\r\n}\r\n\r\nfunction enumerableFrom<T>(\r\n\tsource:ForEachEnumerable<T> | InfiniteValueFactory<T>,\r\n\tadditional?:Array<ForEachEnumerable<T>>):LinqEnumerable<T>\r\n{\r\n\tlet e = Enumerable.fromAny<T>(<any>source);\r\n\tif(!e) throw new UnsupportedEnumerableException();\r\n\r\n\treturn (additional && additional.length)\r\n\t\t? <any>e.merge(additional)\r\n\t\t: <any>e;\r\n}\r\n\r\nexport module Enumerable\r\n{\r\n\t/**\r\n\t * Universal method for converting a primitive enumerables into a LINQ enabled ones.\r\n\t *\r\n\t * Is not limited to TypeScript usages.\r\n\t */\r\n\texport function from<T>(source:InfiniteValueFactory<T>):InfiniteLinqEnumerable<T>\r\n\texport function from<T>(\r\n\t\tsource:ForEachEnumerable<T>,\r\n\t\t...additional:Array<ForEachEnumerable<T>>):LinqEnumerable<T>\r\n\texport function from<T>(\r\n\t\tsource:ForEachEnumerable<T> | InfiniteValueFactory<T>,\r\n\t\t...additional:Array<ForEachEnumerable<T>>):LinqEnumerable<T>\r\n\t{\r\n\t\treturn enumerableFrom(source, additional);\r\n\t}\r\n\r\n\texport function fromAny<T>(\r\n\t\tsource:InfiniteValueFactory<T>):InfiniteLinqEnumerable<T>\r\n\r\n\texport function fromAny<T>(\r\n\t\tsource:ForEachEnumerable<T>):LinqEnumerable<T>\r\n\r\n\texport function fromAny(\r\n\t\tsource:any):LinqEnumerable<any> | undefined\r\n\r\n\texport function fromAny<T>(\r\n\t\tsource:ForEachEnumerable<T>,\r\n\t\tdefaultEnumerable:LinqEnumerable<T>):LinqEnumerable<T>\r\n\r\n\texport function fromAny<T>(\r\n\t\tsource:any,\r\n\t\tdefaultEnumerable?:LinqEnumerable<T>):LinqEnumerable<T> | InfiniteLinqEnumerable<T> | undefined\r\n\t{\r\n\t\tif(Type.isObject(source) || Type.isString(source))\r\n\t\t{\r\n\t\t\tif(source instanceof InfiniteLinqEnumerable)\r\n\t\t\t\treturn source;\r\n\r\n\t\t\tif(Type.isArrayLike<T>(source))\r\n\t\t\t\treturn new ArrayEnumerable<T>(source);\r\n\r\n\t\t\tif(isEnumerable<T>(source))\r\n\t\t\t\treturn new LinqEnumerable<T>(\r\n\t\t\t\t\t() => source.getEnumerator(),\r\n\t\t\t\t\tnull, source.isEndless);\r\n\r\n\t\t\tif(isEnumerator<T>(source))\r\n\t\t\t\treturn new LinqEnumerable<T>(\r\n\t\t\t\t\t() => source, null, source.isEndless);\r\n\r\n\t\t\tif(isIterator<T>(source))\r\n\t\t\t\treturn fromAny(new IteratorEnumerator(source));\r\n\t\t}\r\n\t\telse if(Type.isFunction(source))\r\n\t\t{\r\n\t\t\treturn new InfiniteLinqEnumerable<T>(\r\n\t\t\t\t() => new InfiniteEnumerator<T>(source));\r\n\t\t}\r\n\r\n\t\treturn defaultEnumerable;\r\n\t}\r\n\r\n\texport function fromThese<T>(sources:ForEachEnumerable<T>[]):LinqEnumerable<T>\r\n\t{\r\n\t\tswitch(sources ? sources.length : 0)\r\n\t\t{\r\n\t\t\tcase 0:\r\n\t\t\t\treturn empty<T>();\r\n\t\t\tcase 1:\r\n\t\t\t\t// Allow for validation and throwing...\r\n\t\t\t\treturn enumerableFrom<T>(sources[0]);\r\n\t\t\tdefault:\r\n\t\t\t\treturn empty<T>().merge(sources);\r\n\t\t}\r\n\t}\r\n\r\n\texport function fromOrEmpty<T>(source:ForEachEnumerable<T>):LinqEnumerable<T>\r\n\t{\r\n\t\treturn fromAny(source) || empty<T>();\r\n\t}\r\n\r\n\t/**\r\n\t * Static helper for converting enumerables to an array.\r\n\t * @param source\r\n\t * @returns {any}\r\n\t */\r\n\texport function toArray<T>(source:ForEachEnumerable<T>):T[]\r\n\t{\r\n\t\tif(source instanceof LinqEnumerable)\r\n\t\t\treturn source.toArray();\r\n\r\n\t\treturn enumUtil.toArray(source);\r\n\t}\r\n\r\n\r\n\texport function _choice<T>(values:T[]):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\treturn new InfiniteLinqEnumerable<T>(\r\n\t\t\t() => new EnumeratorBase<T>(\r\n\t\t\t\tnull,\r\n\t\t\t\t(yielder) =>\r\n\t\t\t\t{\r\n\t\t\t\t\tthrowIfDisposed(!values);\r\n\t\t\t\t\treturn yielder.yieldReturn(Random.select.one(values));\r\n\t\t\t\t},\r\n\t\t\t\ttrue // Is endless!\r\n\t\t\t),\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tvalues.length = 0;\r\n\t\t\t\tvalues = NULL;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\texport function choice<T>(values:ArrayLike<T>):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\tlet len = values && values.length;\r\n\t\t// We could return empty if no length, but that would break the typing and produce unexpected results.\r\n\t\t// Enforcing that there must be at least 1 choice is key.\r\n\t\tif(!len || !isFinite(len))\r\n\t\t\tthrow new ArgumentOutOfRangeException('length', length);\r\n\r\n\t\treturn _choice(copy(values));\r\n\t}\r\n\r\n\texport function chooseFrom<T>(arg:T, ...args:T[]):InfiniteLinqEnumerable<T>\r\n\texport function chooseFrom<T>(...args:T[]):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\t// We could return empty if no length, but that would break the typing and produce unexpected results.\r\n\t\t// Enforcing that there must be at least 1 choice is key.\r\n\t\tif(!args.length)\r\n\t\t\tthrow new ArgumentOutOfRangeException('length', length);\r\n\r\n\t\treturn _choice(args);\r\n\t}\r\n\r\n\tfunction _cycle<T>(values:T[]):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\treturn new InfiniteLinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet index:number = 0;\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t}, // Reinitialize the value just in case the enumerator is restarted.\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!values);\r\n\t\t\t\t\t\tif(index>=values.length) index = 0;\r\n\t\t\t\t\t\treturn yielder.yieldReturn(values[index++]);\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttrue // Is endless!\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tvalues.length = 0;\r\n\t\t\t\tvalues = NULL;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\texport function cycle<T>(values:ArrayLike<T>):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\tlet len = values && values.length;\r\n\t\t// We could return empty if no length, but that would break the typing and produce unexpected results.\r\n\t\t// Enforcing that there must be at least 1 choice is key.\r\n\t\tif(!len || !isFinite(len))\r\n\t\t\tthrow new ArgumentOutOfRangeException('length', length);\r\n\r\n\t\t// Make a copy to avoid modifying the collection as we go.\r\n\t\treturn _cycle(copy(values));\r\n\t}\r\n\r\n\texport function cycleThrough<T>(arg:T, ...args:T[]):InfiniteLinqEnumerable<T>\r\n\texport function cycleThrough<T>(...args:T[]):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\t// We could return empty if no length, but that would break the typing and produce unexpected results.\r\n\t\t// Enforcing that there must be at least 1 choice is key.\r\n\t\tif(!args.length)\r\n\t\t\tthrow new ArgumentOutOfRangeException('length', length);\r\n\r\n\t\treturn _cycle(args);\r\n\t}\r\n\r\n\texport function empty<T>():FiniteEnumerable<T>\r\n\t{\r\n\t\t// Could be single export function instance, but for safety, we'll make a new one.\r\n\t\treturn new FiniteEnumerable<T>(getEmptyEnumerator);\r\n\t}\r\n\r\n\texport function repeat<T>(element:T):InfiniteLinqEnumerable<T>;\r\n\texport function repeat<T>(element:T, count:number):FiniteEnumerable<T>;\r\n\texport function repeat<T>(element:T, count:number = Infinity):LinqEnumerable<T>\r\n\t{\r\n\t\tif(!(count>0))\r\n\t\t\treturn Enumerable.empty<T>();\r\n\r\n\t\treturn isFinite(count) && Integer.assert(count, \"count\")\r\n\t\t\t? new FiniteEnumerable<T>(\r\n\t\t\t\t() =>\r\n\t\t\t\t{\r\n\t\t\t\t\tlet c:number = count;\r\n\t\t\t\t\tlet index:number = 0;\r\n\r\n\t\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t\t() => { index = 0; },\r\n\t\t\t\t\t\t(yielder) => (index++<c) && yielder.yieldReturn(element),\r\n\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t\t: new LinqEnumerable<T>(\r\n\t\t\t\t() =>\r\n\t\t\t\t\tnew EnumeratorBase<T>(\r\n\t\t\t\t\t\tnull,\r\n\t\t\t\t\t\t(yielder) => yielder.yieldReturn(element),\r\n\t\t\t\t\t\ttrue // Is endless!\r\n\t\t\t\t\t)\r\n\t\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * DEPRECATED This method began to not make sense in so many ways.\r\n\t * @deprecated since version 4.2\r\n\t * @param initializer\r\n\t * @param finalizer\r\n\t */\r\n\t// Note: this enumeration is endless but can be disposed/cancelled and finalized.\r\n\texport function repeatWithFinalize<T>(\r\n\t\tinitializer:() => T,\r\n\t\tfinalizer:Closure):InfiniteLinqEnumerable<T>\r\n\texport function repeatWithFinalize<T>(\r\n\t\tinitializer:() => T,\r\n\t\tfinalizer?:Action<T>):InfiniteLinqEnumerable<T>\r\n\texport function repeatWithFinalize<T>(\r\n\t\tinitializer:() => T,\r\n\t\tfinalizer?:Action<T>):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\tif(!initializer)\r\n\t\t\tthrow new ArgumentNullException(\"initializer\");\r\n\r\n\t\treturn new InfiniteLinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet element:T;\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(initializer)\r\n\t\t\t\t\t\t\telement = initializer();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn initializer\r\n\t\t\t\t\t\t\t? yielder.yieldReturn(element)\r\n\t\t\t\t\t\t\t: yielder.yieldBreak();\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\telement = NULL;\r\n\t\t\t\t\t\tif(finalizer) finalizer(element);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\ttrue // Is endless!\r\n\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tinitializer = NULL;\r\n\t\t\t\tfinalizer = VOID0;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates an enumerable of one element.\r\n\t * @param element\r\n\t * @returns {FiniteEnumerable<T>}\r\n\t */\r\n\texport function make<T>(element:T):FiniteEnumerable<T>\r\n\t{\r\n\t\treturn repeat<T>(element, 1);\r\n\t}\r\n\r\n// start and step can be other than integer.\r\n\r\n\texport function range(\r\n\t\tstart:number,\r\n\t\tcount:number,\r\n\t\tstep:number = 1):FiniteEnumerable<number>\r\n\t{\r\n\t\tif(!isFinite(start))\r\n\t\t\tthrow new ArgumentOutOfRangeException(\"start\", start, \"Must be a finite number.\");\r\n\r\n\t\tif(!(count>0))\r\n\t\t\treturn empty<number>();\r\n\r\n\t\tif(!step)\r\n\t\t\tthrow new ArgumentOutOfRangeException(\"step\", step, \"Must be a valid value\");\r\n\r\n\t\tif(!isFinite(step))\r\n\t\t\tthrow new ArgumentOutOfRangeException(\"step\", step, \"Must be a finite number.\");\r\n\r\n\t\tInteger.assert(count, \"count\");\r\n\r\n\t\treturn new FiniteEnumerable<number>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet value:number;\r\n\t\t\t\tlet c:number = count; // Force integer evaluation.\r\n\t\t\t\tlet index:number = 0;\r\n\r\n\t\t\t\treturn new EnumeratorBase<number>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\tvalue = start;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet result:boolean =\r\n\t\t\t\t\t\t\t    index++<c\r\n\t\t\t\t\t\t\t    && yielder.yieldReturn(value);\r\n\r\n\t\t\t\t\t\tif(result && index<count)\r\n\t\t\t\t\t\t\tvalue += step;\r\n\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\tfalse\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t}\r\n\r\n\texport function rangeDown(\r\n\t\tstart:number,\r\n\t\tcount:number,\r\n\t\tstep:number = 1):FiniteEnumerable<number>\r\n\t{\r\n\t\tstep = Math.abs(step)* -1;\r\n\r\n\t\treturn range(start, count, step);\r\n\t}\r\n\r\n// step = -1 behaves the same as toNegativeInfinity;\r\n\texport function toInfinity(\r\n\t\tstart:number = 0,\r\n\t\tstep:number  = 1):InfiniteLinqEnumerable<number>\r\n\t{\r\n\t\tif(!isFinite(start))\r\n\t\t\tthrow new ArgumentOutOfRangeException(\"start\", start, \"Must be a finite number.\");\r\n\r\n\t\tif(!step)\r\n\t\t\tthrow new ArgumentOutOfRangeException(\"step\", step, \"Must be a valid value\");\r\n\r\n\t\tif(!isFinite(step))\r\n\t\t\tthrow new ArgumentOutOfRangeException(\"step\", step, \"Must be a finite number.\");\r\n\r\n\t\treturn new InfiniteLinqEnumerable<number>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet value:number;\r\n\r\n\t\t\t\treturn new EnumeratorBase<number>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvalue = start;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet current:number = value;\r\n\t\t\t\t\t\tvalue += step;\r\n\t\t\t\t\t\treturn yielder.yieldReturn(current);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\ttrue // Is endless!\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\texport function toNegativeInfinity(\r\n\t\tstart:number = 0,\r\n\t\tstep:number  = 1):InfiniteLinqEnumerable<number>\r\n\t{\r\n\t\treturn toInfinity(start, -step);\r\n\t}\r\n\r\n\texport function rangeTo(\r\n\t\tstart:number,\r\n\t\tto:number,\r\n\t\tstep:number = 1):FiniteEnumerable<number>\r\n\t{\r\n\t\tif(isNaN(to) || !isFinite(to))\r\n\t\t\tthrow new ArgumentOutOfRangeException(\"to\", to, \"Must be a finite number.\");\r\n\r\n\t\tif(step && !isFinite(step))\r\n\t\t\tthrow new ArgumentOutOfRangeException(\"step\", step, \"Must be a finite non-zero number.\");\r\n\r\n// This way we adjust for the delta from start and to so the user can say +/- step and it will work as expected.\r\n\t\tstep = Math.abs(step);\r\n\r\n\t\treturn new FiniteEnumerable<number>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet value:number;\r\n\r\n\t\t\t\treturn new EnumeratorBase<number>(() => { value = start; },\r\n\t\t\t\t\tstart<to\r\n\t\t\t\t\t\t? yielder =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet result:boolean = value<=to && yielder.yieldReturn(value);\r\n\r\n\t\t\t\t\t\tif(result)\r\n\t\t\t\t\t\t\tvalue += step;\r\n\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t: yielder =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet result:boolean = value>=to && yielder.yieldReturn(value);\r\n\r\n\t\t\t\t\t\tif(result)\r\n\t\t\t\t\t\t\tvalue -= step;\r\n\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t, false);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\texport function matches(\r\n\t\tinput:string, pattern:any,\r\n\t\tflags:string = \"\"):FiniteEnumerable<RegExpExecArray>\r\n\t{\r\n\t\tif(input==null)\r\n\t\t\tthrow new ArgumentNullException(\"input\");\r\n\t\tconst type = typeof input;\r\n\t\tif(type!=Type.STRING)\r\n\t\t\tthrow new Error(\"Cannot exec RegExp matches of type '\" + type + \"'.\");\r\n\r\n\t\tif(pattern instanceof RegExp)\r\n\t\t{\r\n\t\t\tflags += (pattern.ignoreCase) ? \"i\" : \"\";\r\n\t\t\tflags += (pattern.multiline) ? \"m\" : \"\";\r\n\t\t\tpattern = pattern.source;\r\n\t\t}\r\n\r\n\t\tif(flags.indexOf(\"g\")=== -1) flags += \"g\";\r\n\r\n\t\treturn new FiniteEnumerable<RegExpExecArray>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet regex:RegExp;\r\n\t\t\t\treturn new EnumeratorBase<RegExpExecArray>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tregex = new RegExp(pattern, flags);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Calling regex.exec consecutively on the same input uses the lastIndex to start the next match.\r\n\t\t\t\t\t\tlet match = regex.exec(input);\r\n\t\t\t\t\t\treturn match!=null\r\n\t\t\t\t\t\t\t? yielder.yieldReturn(match)\r\n\t\t\t\t\t\t\t: yielder.yieldBreak();\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\texport function generate<T>(factory:() => T):InfiniteLinqEnumerable<T>;\r\n\texport function generate<T>(factory:() => T, count:number):FiniteEnumerable<T>;\r\n\texport function generate<T>(factory:(index:number) => T):InfiniteLinqEnumerable<T>;\r\n\texport function generate<T>(factory:(index:number) => T, count:number):FiniteEnumerable<T>;\r\n\texport function generate<T>(\r\n\t\tfactory:(index?:number) => T,\r\n\t\tcount:number = Infinity):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\tif(!factory)\r\n\t\t\tthrow new ArgumentNullException(\"factory\");\r\n\r\n\t\tif(isNaN(count) || count<=0)\r\n\t\t\treturn Enumerable.empty<T>();\r\n\r\n\t\treturn isFinite(count) && Integer.assert(count, \"count\")\r\n\t\t\t? new FiniteEnumerable<T>(\r\n\t\t\t\t() =>\r\n\t\t\t\t{\r\n\t\t\t\t\tlet c:number = count;\r\n\t\t\t\t\tlet index:number = 0;\r\n\r\n\t\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthrowIfDisposed(!factory);\r\n\t\t\t\t\t\t\tlet current:number = index++;\r\n\t\t\t\t\t\t\treturn current<c && yielder.yieldReturn(factory(current));\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t() =>\r\n\t\t\t\t{\r\n\t\t\t\t\tfactory = NULL;\r\n\t\t\t\t})\r\n\t\t\t: new InfiniteLinqEnumerable<T>(\r\n\t\t\t\t() =>\r\n\t\t\t\t{\r\n\t\t\t\t\tlet index:number = 0;\r\n\t\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthrowIfDisposed(!factory);\r\n\t\t\t\t\t\t\treturn yielder.yieldReturn(factory(index++));\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\ttrue // Is endless!\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t\t() =>\r\n\t\t\t\t{\r\n\t\t\t\t\tfactory = NULL;\r\n\t\t\t\t});\r\n\t}\r\n\r\n\r\n\texport module random\r\n\t{\r\n\t\texport function floats(maxExclusive:number = 1):InfiniteLinqEnumerable<number>\r\n\t\t{\r\n\t\t\treturn generate(Random.generate(maxExclusive));\r\n\t\t}\r\n\r\n\t\texport function integers(boundary:number, inclusive?:boolean):InfiniteLinqEnumerable<number>\r\n\t\t{\r\n\t\t\treturn generate(Random.generate.integers(boundary, inclusive));\r\n\t\t}\r\n\t}\r\n\r\n\texport function unfold<T>(\r\n\t\tseed:T,\r\n\t\tvalueFactory:SelectorWithIndex<T, T>,\r\n\t\tskipSeed:Boolean = false):InfiniteLinqEnumerable<T>\r\n\t{\r\n\t\tif(!valueFactory)\r\n\t\t\tthrow new ArgumentNullException(\"factory\");\r\n\r\n\t\treturn new InfiniteLinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet index:number = 0;\r\n\t\t\t\tlet value:T;\r\n\t\t\t\tlet isFirst:boolean;\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\tvalue = seed;\r\n\t\t\t\t\t\tisFirst = !skipSeed;\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(!valueFactory);\r\n\t\t\t\t\t\tlet i = index++;\r\n\t\t\t\t\t\tif(isFirst)\r\n\t\t\t\t\t\t\tisFirst = false;\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\tvalue = valueFactory(value, i);\r\n\t\t\t\t\t\treturn yielder.yieldReturn(value);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\ttrue // Is endless!\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tvalueFactory = NULL;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\texport function forEach<T>(\r\n\t\te:ForEachEnumerable<T>,\r\n\t\taction:ActionWithIndex<T>,\r\n\t\tmax?:number):number\r\n\r\n\texport function forEach<T>(\r\n\t\te:ForEachEnumerable<T>,\r\n\t\taction:PredicateWithIndex<T>,\r\n\t\tmax?:number):number\r\n\r\n\texport function forEach<T>(\r\n\t\tenumerable:ForEachEnumerable<T>,\r\n\t\taction:ActionWithIndex<T> | PredicateWithIndex<T>,\r\n\t\tmax:number = Infinity):number\r\n\t{\r\n\t\t// Will properly dispose created enumerable.\r\n\t\t// Will throw if enumerable is endless.\r\n\t\treturn enumUtil.forEach(enumerable, action, max);\r\n\t}\r\n\r\n\texport function map<T, TResult>(\r\n\t\tenumerable:ForEachEnumerable<T>,\r\n\t\tselector:SelectorWithIndex<T, TResult>):TResult[]\r\n\t{\r\n\t\t// Will properly dispose created enumerable.\r\n\t\t// Will throw if enumerable is endless.\r\n\t\treturn enumUtil.map(enumerable, selector);\r\n\t}\r\n\r\n// Slightly optimized versions for numbers.\r\n\texport function max(values:FiniteEnumerable<number>):number\r\n\t{\r\n\t\tconst v = values\r\n\t\t\t.takeUntil(v => v== +Infinity, true)\r\n\t\t\t.aggregate(Functions.Greater);\r\n\r\n\t\treturn v===VOID0 ? NaN : v;\r\n\t}\r\n\r\n\texport function min(values:FiniteEnumerable<number>):number\r\n\t{\r\n\t\tconst v = values\r\n\t\t\t.takeUntil(v => v== -Infinity, true)\r\n\t\t\t.aggregate(Functions.Lesser);\r\n\r\n\t\treturn v===VOID0 ? NaN : v;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Takes any set of collections of the same type and weaves them together.\r\n\t * @param enumerables\r\n\t * @returns {Enumerable<T>}\r\n\t */\r\n\texport function weave<T>(\r\n\t\tenumerables:ForEachEnumerable<ForEachEnumerable<T>>):LinqEnumerable<T>\r\n\t{\r\n\t\tif(!enumerables)\r\n\t\t\tthrow new ArgumentNullException('enumerables');\r\n\r\n\t\tlet disposed = false;\r\n\t\treturn new LinqEnumerable<T>(\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tlet queue:Queue<IEnumerator<T>>;\r\n\t\t\t\tlet mainEnumerator:IEnumerator<ForEachEnumerable<T>> | null;\r\n\t\t\t\tlet index:number;\r\n\r\n\t\t\t\treturn new EnumeratorBase<T>(\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\tqueue = new Queue<IEnumerator<T>>();\r\n\t\t\t\t\t\tmainEnumerator = enumUtil.from(enumerables);\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t(yielder) =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthrowIfDisposed(disposed);\r\n\t\t\t\t\t\tlet e:IEnumerator<T> | null = null;\r\n\r\n\t\t\t\t\t\t// First pass...\r\n\t\t\t\t\t\tif(mainEnumerator)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\twhile(!e && mainEnumerator.moveNext())\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tlet c = mainEnumerator.current;\r\n\t\t\t\t\t\t\t\te = nextEnumerator(queue, c ? enumUtil.from(c) : NULL);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(!e)\r\n\t\t\t\t\t\t\t\tmainEnumerator = null;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\twhile(!e && queue.tryDequeue(value =>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\te = nextEnumerator(queue, enumUtil.from<T>(value));\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t{ }\r\n\r\n\t\t\t\t\t\treturn e\r\n\t\t\t\t\t\t\t? yielder.yieldReturn(e.current)\r\n\t\t\t\t\t\t\t: yielder.yieldBreak();\r\n\r\n\t\t\t\t\t},\r\n\r\n\t\t\t\t\t() =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tif(queue)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdispose.these.noCopy(queue.dump());\r\n\t\t\t\t\t\t\tqueue = NULL;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(mainEnumerator) mainEnumerator.dispose();\r\n\t\t\t\t\t\tmainEnumerator = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\t\t\t() =>\r\n\t\t\t{\r\n\t\t\t\tdisposed = true;\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nexport default Enumerable;\r\n"]}